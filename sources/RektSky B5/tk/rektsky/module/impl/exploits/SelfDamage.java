/*
 * Decompiled with CFR 0.152.
 */
package tk.rektsky.module.impl.exploits;

import net.minecraft.client.Minecraft;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C0BPacketEntityAction;
import tk.rektsky.module.Category;
import tk.rektsky.module.Module;

public class SelfDamage
extends Module {
    public SelfDamage() {
        super("SelfDamage", "Damage your self. WARNING: Don't spam it unless you got Timer(FunnyFly built-in) on and timer speed less than 0.5", Category.EXPLOIT);
    }

    @Override
    public void onEnable() {
        SelfDamage.damage();
        this.setToggled(false);
    }

    public static void damage() {
        Minecraft mc = Minecraft.getMinecraft();
        if (!mc.thePlayer.isSprinting()) {
            mc.getNetHandler().addToSendQueueSilent(new C0BPacketEntityAction(mc.thePlayer, C0BPacketEntityAction.Action.START_SPRINTING));
        }
        double posY = mc.thePlayer.posY;
        double[] values = new double[]{0.42f, 0.33319999363422426, 0.24813599859093927, 0.1647732818260721};
        for (int i2 = 0; i2 < 3; ++i2) {
            for (double value : values) {
                mc.getNetHandler().addToSendQueueSilent(new C03PacketPlayer.C04PacketPlayerPosition(mc.thePlayer.posX, posY += value, mc.thePlayer.posZ, false));
            }
            mc.getNetHandler().addToSendQueueSilent(new C03PacketPlayer.C04PacketPlayerPosition(mc.thePlayer.posX, posY += 0.08307781780646906, mc.thePlayer.posZ, false));
        }
        double prevPosY = posY - 0.07840000152587834;
        while (posY > mc.thePlayer.posY) {
            double lastDist = posY - prevPosY;
            prevPosY = posY;
            if (!((posY += (lastDist - 0.08) * 0.98) > mc.thePlayer.posY)) continue;
            mc.getNetHandler().addToSendQueueSilent(new C03PacketPlayer.C04PacketPlayerPosition(mc.thePlayer.posX, posY, mc.thePlayer.posZ, false));
        }
        mc.getNetHandler().addToSendQueueSilent(new C03PacketPlayer.C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ, true));
        mc.getNetHandler().addToSendQueueSilent(new C03PacketPlayer.C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY + (double)0.42f, mc.thePlayer.posZ, false));
        mc.getNetHandler().addToSendQueueSilent(new C03PacketPlayer(false));
        if (!mc.thePlayer.isSprinting()) {
            mc.getNetHandler().addToSendQueueSilent(new C0BPacketEntityAction(mc.thePlayer, C0BPacketEntityAction.Action.STOP_SPRINTING));
        }
    }
}


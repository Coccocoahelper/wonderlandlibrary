/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.network.INetHandler
 *  net.minecraft.network.Packet
 *  net.minecraft.network.play.INetHandlerPlayClient
 *  net.minecraft.network.play.INetHandlerPlayServer
 *  org.jetbrains.annotations.NotNull
 */
package net.dev.important.modules.module.modules.exploit;

import java.util.LinkedList;
import kotlin.Metadata;
import kotlin.jvm.internal.Intrinsics;
import kotlin.text.StringsKt;
import net.dev.important.event.EventTarget;
import net.dev.important.event.PacketEvent;
import net.dev.important.event.UpdateEvent;
import net.dev.important.event.WorldEvent;
import net.dev.important.modules.module.Category;
import net.dev.important.modules.module.Info;
import net.dev.important.modules.module.Module;
import net.dev.important.utils.ClientUtils;
import net.dev.important.utils.MinecraftInstance;
import net.dev.important.utils.MovementUtils;
import net.dev.important.utils.PacketUtils;
import net.dev.important.utils.misc.RandomUtils;
import net.dev.important.utils.timer.MSTimer;
import net.dev.important.value.BoolValue;
import net.dev.important.value.IntegerValue;
import net.dev.important.value.ListValue;
import net.minecraft.network.INetHandler;
import net.minecraft.network.Packet;
import net.minecraft.network.play.INetHandlerPlayClient;
import net.minecraft.network.play.INetHandlerPlayServer;
import org.jetbrains.annotations.NotNull;

@Info(name="FakeLag", spacedName="Fake Lag", description="Lagging yourself server-side, and client-side.", category=Category.EXPLOIT, cnName="\u5047\u7684\u56de\u5f39")
@Metadata(mv={1, 6, 0}, k=1, xi=48, d1={"\u0000j\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\b\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u000b\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0010\u0002\n\u0000\n\u0002\u0010\u000e\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\b\u0007\u0018\u00002\u00020\u0001B\u0005\u00a2\u0006\u0002\u0010\u0002J\u000e\u0010\u0019\u001a\u00020\u001a2\u0006\u0010\u001b\u001a\u00020\u001cJ\b\u0010\u001d\u001a\u00020\u001aH\u0016J\b\u0010\u001e\u001a\u00020\u001aH\u0016J\u0010\u0010\u001f\u001a\u00020\u001a2\u0006\u0010 \u001a\u00020!H\u0007J\u0010\u0010\"\u001a\u00020\u001a2\u0006\u0010 \u001a\u00020#H\u0007J\u0010\u0010$\u001a\u00020\u001a2\u0006\u0010 \u001a\u00020%H\u0007R\u000e\u0010\u0003\u001a\u00020\u0004X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0005\u001a\u00020\u0006X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0007\u001a\u00020\u0004X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u001a\u0010\b\u001a\u000e\u0012\n\u0012\b\u0012\u0004\u0012\u00020\u000b0\n0\tX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\f\u001a\u00020\rX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u000e\u001a\u00020\u000fX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0010\u001a\u00020\u0011X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0012\u001a\u00020\u0011X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0013\u001a\u00020\u0014X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u001a\u0010\u0015\u001a\u000e\u0012\n\u0012\b\u0012\u0004\u0012\u00020\u00160\n0\tX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0017\u001a\u00020\rX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0018\u001a\u00020\u000fX\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006&"}, d2={"Lnet/dev/important/modules/module/modules/exploit/FakeLag;", "Lnet/dev/important/modules/module/Module;", "()V", "debugValue", "Lnet/dev/important/value/BoolValue;", "fakeLagMode", "Lnet/dev/important/value/ListValue;", "fakeLagMoveOnly", "inBus", "Ljava/util/LinkedList;", "Lnet/minecraft/network/Packet;", "Lnet/minecraft/network/play/INetHandlerPlayClient;", "inDelay", "", "inTimer", "Lnet/dev/important/utils/timer/MSTimer;", "maxRand", "Lnet/dev/important/value/IntegerValue;", "minRand", "noModify", "", "outBus", "Lnet/minecraft/network/play/INetHandlerPlayServer;", "outDelay", "outTimer", "debug", "", "s", "", "onDisable", "onEnable", "onPacket", "event", "Lnet/dev/important/event/PacketEvent;", "onUpdate", "Lnet/dev/important/event/UpdateEvent;", "onWorld", "Lnet/dev/important/event/WorldEvent;", "LiquidBounce"})
public final class FakeLag
extends Module {
    @NotNull
    private final ListValue fakeLagMode;
    @NotNull
    private final BoolValue fakeLagMoveOnly;
    @NotNull
    private final IntegerValue minRand;
    @NotNull
    private final IntegerValue maxRand;
    @NotNull
    private final BoolValue debugValue;
    @NotNull
    private final LinkedList<Packet<INetHandlerPlayServer>> outBus;
    @NotNull
    private final LinkedList<Packet<INetHandlerPlayClient>> inBus;
    @NotNull
    private final MSTimer inTimer;
    @NotNull
    private final MSTimer outTimer;
    private int inDelay;
    private int outDelay;
    private boolean noModify;

    public FakeLag() {
        String[] stringArray = new String[]{"All", "InBound", "OutBound"};
        this.fakeLagMode = new ListValue("Mode", stringArray, "All");
        this.fakeLagMoveOnly = new BoolValue("MoveOnly", true);
        this.minRand = new IntegerValue(this){
            final /* synthetic */ FakeLag this$0;
            {
                this.this$0 = $receiver;
                super("MinDelay", 0, 0, 20000, "ms");
            }

            protected void onChanged(int oldValue, int newValue) {
                int v = ((Number)FakeLag.access$getMaxRand$p(this.this$0).get()).intValue();
                if (v < newValue) {
                    this.set(v);
                }
            }
        };
        this.maxRand = new IntegerValue(this){
            final /* synthetic */ FakeLag this$0;
            {
                this.this$0 = $receiver;
                super("MaxDelay", 0, 0, 20000, "ms");
            }

            protected void onChanged(int oldValue, int newValue) {
                int v = ((Number)FakeLag.access$getMinRand$p(this.this$0).get()).intValue();
                if (v > newValue) {
                    this.set(v);
                }
            }
        };
        this.debugValue = new BoolValue("Debug", false);
        this.outBus = new LinkedList();
        this.inBus = new LinkedList();
        this.inTimer = new MSTimer();
        this.outTimer = new MSTimer();
    }

    public final void debug(@NotNull String s) {
        Intrinsics.checkNotNullParameter(s, "s");
        if (((Boolean)this.debugValue.get()).booleanValue()) {
            ClientUtils.displayChatMessage(Intrinsics.stringPlus("\u00a77[\u00a76\u00a7lFakeLag\u00a77]\u00a7f ", s));
        }
    }

    @Override
    public void onEnable() {
        this.inBus.clear();
        this.outBus.clear();
        this.inTimer.reset();
        this.outTimer.reset();
        this.noModify = false;
    }

    @Override
    public void onDisable() {
        while (this.inBus.size() > 0) {
            this.inBus.poll().func_148833_a((INetHandler)MinecraftInstance.mc.func_147114_u());
        }
        while (this.outBus.size() > 0) {
            PacketUtils.sendPacketNoEvent(this.outBus.poll());
        }
        this.inBus.clear();
        this.outBus.clear();
        MinecraftInstance.mc.field_71428_T.field_74278_d = 1.0f;
    }

    @EventTarget(priority=-2)
    public final void onPacket(@NotNull PacketEvent event) {
        String string;
        Intrinsics.checkNotNullParameter(event, "event");
        Packet<?> packet = event.getPacket();
        if (this.noModify || MinecraftInstance.mc.field_71439_g == null || MinecraftInstance.mc.field_71441_e == null || MinecraftInstance.mc.field_71439_g.field_70173_aa <= 0 || MinecraftInstance.mc.func_71356_B()) {
            return;
        }
        if (StringsKt.equals((String)this.fakeLagMode.get(), "outbound", true) || StringsKt.equals((String)this.fakeLagMode.get(), "all", true)) {
            Class<?> clazz = packet.getClass();
            Intrinsics.checkNotNull(clazz);
            string = clazz.getSimpleName();
            Intrinsics.checkNotNullExpressionValue(string, "packet::class.java!!.getSimpleName()");
            if (StringsKt.startsWith(string, "C", true)) {
                Class<?> clazz2 = packet.getClass();
                Intrinsics.checkNotNull(clazz2);
                this.debug(Intrinsics.stringPlus("outbound, ", clazz2.getSimpleName()));
                this.outBus.add(packet);
                event.cancelEvent();
            }
        }
        if (StringsKt.equals((String)this.fakeLagMode.get(), "inbound", true) || StringsKt.equals((String)this.fakeLagMode.get(), "all", true)) {
            Class<?> clazz = packet.getClass();
            Intrinsics.checkNotNull(clazz);
            string = clazz.getSimpleName();
            Intrinsics.checkNotNullExpressionValue(string, "packet::class.java!!.getSimpleName()");
            if (StringsKt.startsWith(string, "S", true)) {
                Class<?> clazz3 = packet.getClass();
                Intrinsics.checkNotNull(clazz3);
                this.debug(Intrinsics.stringPlus("inbound, ", clazz3.getSimpleName()));
                this.inBus.add(packet);
                event.cancelEvent();
            }
        }
    }

    @EventTarget
    public final void onWorld(@NotNull WorldEvent event) {
        Intrinsics.checkNotNullParameter(event, "event");
        this.inBus.clear();
        this.outBus.clear();
        this.inTimer.reset();
        this.outTimer.reset();
    }

    @EventTarget(priority=-2)
    public final void onUpdate(@NotNull UpdateEvent event) {
        Intrinsics.checkNotNullParameter(event, "event");
        if (!this.inBus.isEmpty() && (((Boolean)this.fakeLagMoveOnly.get()).booleanValue() && !MovementUtils.isMoving() || this.inTimer.hasTimePassed(this.inDelay))) {
            this.noModify = true;
            while (this.inBus.size() > 0) {
                this.inBus.poll().func_148833_a((INetHandler)MinecraftInstance.mc.func_147114_u());
            }
            this.noModify = false;
            this.inDelay = RandomUtils.nextInt(((Number)this.minRand.get()).intValue(), ((Number)this.maxRand.get()).intValue());
            this.inTimer.reset();
            this.debug("poll (in)");
        }
        if (!this.outBus.isEmpty() && (((Boolean)this.fakeLagMoveOnly.get()).booleanValue() && !MovementUtils.isMoving() || this.outTimer.hasTimePassed(this.outDelay))) {
            this.noModify = true;
            while (this.outBus.size() > 0) {
                MinecraftInstance.mc.func_147114_u().func_147297_a(this.outBus.poll());
            }
            this.noModify = false;
            this.outDelay = RandomUtils.nextInt(((Number)this.minRand.get()).intValue(), ((Number)this.maxRand.get()).intValue());
            this.outTimer.reset();
            this.debug("poll (out)");
        }
    }

    public static final /* synthetic */ IntegerValue access$getMaxRand$p(FakeLag $this) {
        return $this.maxRand;
    }

    public static final /* synthetic */ IntegerValue access$getMinRand$p(FakeLag $this) {
        return $this.minRand;
    }
}


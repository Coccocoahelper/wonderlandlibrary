/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.network.Packet
 *  net.minecraft.network.play.INetHandlerPlayServer
 *  net.minecraft.network.play.client.C00PacketKeepAlive
 *  net.minecraft.network.play.client.C0FPacketConfirmTransaction
 *  org.jetbrains.annotations.NotNull
 */
package net.dev.important.modules.module.modules.exploit;

import java.util.LinkedList;
import kotlin.Metadata;
import kotlin.jvm.functions.Function0;
import kotlin.jvm.internal.Intrinsics;
import kotlin.ranges.RangesKt;
import kotlin.text.StringsKt;
import net.dev.important.event.EventTarget;
import net.dev.important.event.PacketEvent;
import net.dev.important.event.UpdateEvent;
import net.dev.important.event.WorldEvent;
import net.dev.important.modules.module.Category;
import net.dev.important.modules.module.Info;
import net.dev.important.modules.module.Module;
import net.dev.important.utils.ClientUtils;
import net.dev.important.utils.MinecraftInstance;
import net.dev.important.utils.PacketUtils;
import net.dev.important.utils.misc.RandomUtils;
import net.dev.important.utils.timer.MSTimer;
import net.dev.important.value.BoolValue;
import net.dev.important.value.IntegerValue;
import net.dev.important.value.ListValue;
import net.minecraft.network.Packet;
import net.minecraft.network.play.INetHandlerPlayServer;
import net.minecraft.network.play.client.C00PacketKeepAlive;
import net.minecraft.network.play.client.C0FPacketConfirmTransaction;
import org.jetbrains.annotations.NotNull;

@Info(name="CustomDisabler", spacedName="Custom Disabler", description="Disabler but fully customizable. Contains 10+ options.", category=Category.EXPLOIT, cnName="\u81ea\u5b9a\u4e49\u7ed5\u8fc7\u8865\u4e01")
@Metadata(mv={1, 6, 0}, k=1, xi=48, d1={"\u0000j\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\b\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\r\n\u0002\u0010\t\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\f\n\u0002\u0010\u0002\n\u0000\n\u0002\u0010\u000e\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\b\u0007\u0018\u00002\u00020\u0001B\u0005\u00a2\u0006\u0002\u0010\u0002J\u000e\u0010.\u001a\u00020/2\u0006\u00100\u001a\u000201J\b\u00102\u001a\u00020/H\u0016J\b\u00103\u001a\u00020/H\u0016J\u0010\u00104\u001a\u00020/2\u0006\u00105\u001a\u000206H\u0007J\u0010\u00107\u001a\u00020/2\u0006\u00105\u001a\u000208H\u0007J\u0010\u00109\u001a\u00020/2\u0006\u00105\u001a\u00020:H\u0007R\u0014\u0010\u0003\u001a\b\u0012\u0004\u0012\u00020\u00050\u0004X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0006\u001a\u00020\u0007X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\b\u001a\u00020\tX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\n\u001a\u00020\u000bX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\f\u001a\u00020\u0007X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\r\u001a\u00020\u000eX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u000f\u001a\u00020\u000bX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0010\u001a\u00020\u0007X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0011\u001a\u00020\u0007X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0012\u001a\u00020\u0007X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0013\u001a\u00020\u0007X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0014\u001a\u00020\u0007X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0015\u001a\u00020\u000eX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0016\u001a\u00020\u000eX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0017\u001a\u00020\u000eX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0018\u001a\u00020\tX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0019\u001a\u00020\tX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u001a\u001a\u00020\u000eX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u001b\u001a\u00020\u001cX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u001d\u001a\u00020\u001cX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u001e\u001a\u00020\u001fX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010 \u001a\u00020\u001fX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u0014\u0010!\u001a\b\u0012\u0004\u0012\u00020\"0\u0004X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010#\u001a\u00020\u0007X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010$\u001a\u00020\tX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010%\u001a\u00020\u000bX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010&\u001a\u00020\u0007X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010'\u001a\u00020\u000eX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010(\u001a\u00020\u000bX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010)\u001a\u00020\u0007X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010*\u001a\u00020\u0007X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010+\u001a\u00020\u0007X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010,\u001a\u00020\u0007X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010-\u001a\u00020\u0007X\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006;"}, d2={"Lnet/dev/important/modules/module/modules/exploit/CustomDisabler;", "Lnet/dev/important/modules/module/Module;", "()V", "alive", "Ljava/util/LinkedList;", "Lnet/minecraft/network/play/client/C00PacketKeepAlive;", "aliveBusMinSize", "Lnet/dev/important/value/IntegerValue;", "aliveDelay", "", "aliveDelayMode", "Lnet/dev/important/value/ListValue;", "aliveDupe", "aliveEnabled", "Lnet/dev/important/value/BoolValue;", "aliveSendMethod", "alive_pTickDelay", "alive_poll_Max", "alive_poll_Min", "alive_sTick_MaxDelay", "alive_sTick_MinDelay", "clearAliveSent", "clearTransSent", "debugValue", "dynAliveDelay", "dynTransDelay", "flushWhenDisable", "lastAliveTick", "", "lastTransTick", "msTimerAlive", "Lnet/dev/important/utils/timer/MSTimer;", "msTimerTrans", "trans", "Lnet/minecraft/network/play/client/C0FPacketConfirmTransaction;", "transBusMinSize", "transDelay", "transDelayMode", "transDupe", "transEnabled", "transSendMethod", "trans_pTickDelay", "trans_poll_Max", "trans_poll_Min", "trans_sTick_MaxDelay", "trans_sTick_MinDelay", "debug", "", "s", "", "onDisable", "onEnable", "onPacket", "event", "Lnet/dev/important/event/PacketEvent;", "onUpdate", "Lnet/dev/important/event/UpdateEvent;", "onWorld", "Lnet/dev/important/event/WorldEvent;", "LiquidBounce"})
public final class CustomDisabler
extends Module {
    @NotNull
    private final BoolValue transEnabled = new BoolValue("Transactions", false);
    @NotNull
    private final BoolValue aliveEnabled = new BoolValue("KeepAlive", false);
    @NotNull
    private final ListValue transDelayMode;
    @NotNull
    private final ListValue aliveDelayMode;
    @NotNull
    private final ListValue transSendMethod;
    @NotNull
    private final ListValue aliveSendMethod;
    @NotNull
    private final IntegerValue trans_pTickDelay;
    @NotNull
    private final IntegerValue trans_sTick_MinDelay;
    @NotNull
    private final IntegerValue trans_sTick_MaxDelay;
    @NotNull
    private final IntegerValue alive_pTickDelay;
    @NotNull
    private final IntegerValue alive_sTick_MinDelay;
    @NotNull
    private final IntegerValue alive_sTick_MaxDelay;
    @NotNull
    private final IntegerValue trans_poll_Min;
    @NotNull
    private final IntegerValue trans_poll_Max;
    @NotNull
    private final IntegerValue alive_poll_Min;
    @NotNull
    private final IntegerValue alive_poll_Max;
    @NotNull
    private final IntegerValue transBusMinSize;
    @NotNull
    private final IntegerValue aliveBusMinSize;
    @NotNull
    private final IntegerValue transDupe;
    @NotNull
    private final IntegerValue aliveDupe;
    @NotNull
    private final BoolValue clearTransSent;
    @NotNull
    private final BoolValue clearAliveSent;
    @NotNull
    private final BoolValue flushWhenDisable;
    @NotNull
    private final BoolValue debugValue;
    @NotNull
    private final LinkedList<C0FPacketConfirmTransaction> trans;
    @NotNull
    private final LinkedList<C00PacketKeepAlive> alive;
    @NotNull
    private final MSTimer msTimerTrans;
    @NotNull
    private final MSTimer msTimerAlive;
    private int dynTransDelay;
    private int dynAliveDelay;
    private long lastTransTick;
    private long lastAliveTick;
    private int transDelay;
    private int aliveDelay;

    public CustomDisabler() {
        Object object = new String[]{"PlayerTick", "SystemTick", "Dynamic", "BusSize"};
        this.transDelayMode = new ListValue("Transactions-DelayMode", (String[])object, "Dynamic", new Function0<Boolean>(this){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return (Boolean)CustomDisabler.access$getTransEnabled$p(this.this$0).get();
            }
        });
        object = new String[]{"PlayerTick", "SystemTick", "Dynamic", "BusSize"};
        this.aliveDelayMode = new ListValue("KeepAlive-DelayMode", (String[])object, "Dynamic", new Function0<Boolean>(this){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return (Boolean)CustomDisabler.access$getAliveEnabled$p(this.this$0).get();
            }
        });
        object = new String[]{"PollFirst", "PollLast", "FlushAll"};
        this.transSendMethod = new ListValue("Transactions-SendMethod", (String[])object, "PollFirst", new Function0<Boolean>(this){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return (Boolean)CustomDisabler.access$getTransEnabled$p(this.this$0).get();
            }
        });
        object = new String[]{"PollFirst", "PollLast", "FlushAll"};
        this.aliveSendMethod = new ListValue("KeepAlive-SendMethod", (String[])object, "PollFirst", new Function0<Boolean>(this){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return (Boolean)CustomDisabler.access$getAliveEnabled$p(this.this$0).get();
            }
        });
        this.trans_pTickDelay = new IntegerValue("Transactions-PlayerTick-Delay", 1, 1, 2000, new Function0<Boolean>(this){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return (Boolean)CustomDisabler.access$getTransEnabled$p(this.this$0).get() != false && StringsKt.equals((String)CustomDisabler.access$getTransDelayMode$p(this.this$0).get(), "playertick", true);
            }
        });
        object = new Function0<Boolean>(this){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return (Boolean)CustomDisabler.access$getTransEnabled$p(this.this$0).get() != false && StringsKt.equals((String)CustomDisabler.access$getTransDelayMode$p(this.this$0).get(), "systemtick", true);
            }
        };
        this.trans_sTick_MinDelay = new IntegerValue(this, object){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super("Transactions-SystemTick-MinDelay", 0, 0, 30000, "ms", $super_call_param$1);
            }

            protected void onChanged(int oldValue, int newValue) {
                int v = ((Number)CustomDisabler.access$getTrans_sTick_MaxDelay$p(this.this$0).get()).intValue();
                if (v < newValue) {
                    this.set(v);
                }
            }
        };
        object = new Function0<Boolean>(this){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return (Boolean)CustomDisabler.access$getTransEnabled$p(this.this$0).get() != false && StringsKt.equals((String)CustomDisabler.access$getTransDelayMode$p(this.this$0).get(), "systemtick", true);
            }
        };
        this.trans_sTick_MaxDelay = new IntegerValue(this, object){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super("Transactions-SystemTick-MaxDelay", 0, 0, 30000, "ms", $super_call_param$1);
            }

            protected void onChanged(int oldValue, int newValue) {
                int v = ((Number)CustomDisabler.access$getTrans_sTick_MinDelay$p(this.this$0).get()).intValue();
                if (v > newValue) {
                    this.set(v);
                }
            }
        };
        this.alive_pTickDelay = new IntegerValue("KeepAlive-PlayerTick-Delay", 1, 1, 2000, new Function0<Boolean>(this){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return (Boolean)CustomDisabler.access$getAliveEnabled$p(this.this$0).get() != false && StringsKt.equals((String)CustomDisabler.access$getAliveDelayMode$p(this.this$0).get(), "playertick", true);
            }
        });
        object = new Function0<Boolean>(this){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return (Boolean)CustomDisabler.access$getAliveEnabled$p(this.this$0).get() != false && StringsKt.equals((String)CustomDisabler.access$getAliveDelayMode$p(this.this$0).get(), "systemtick", true);
            }
        };
        this.alive_sTick_MinDelay = new IntegerValue(this, object){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super("KeepAlive-SystemTick-MinDelay", 0, 0, 30000, "ms", $super_call_param$1);
            }

            protected void onChanged(int oldValue, int newValue) {
                int v = ((Number)CustomDisabler.access$getAlive_sTick_MaxDelay$p(this.this$0).get()).intValue();
                if (v < newValue) {
                    this.set(v);
                }
            }
        };
        object = new Function0<Boolean>(this){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return (Boolean)CustomDisabler.access$getAliveEnabled$p(this.this$0).get() != false && StringsKt.equals((String)CustomDisabler.access$getAliveDelayMode$p(this.this$0).get(), "systemtick", true);
            }
        };
        this.alive_sTick_MaxDelay = new IntegerValue(this, object){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super("KeepAlive-SystemTick-MaxDelay", 0, 0, 30000, "ms", $super_call_param$1);
            }

            protected void onChanged(int oldValue, int newValue) {
                int v = ((Number)CustomDisabler.access$getAlive_sTick_MinDelay$p(this.this$0).get()).intValue();
                if (v > newValue) {
                    this.set(v);
                }
            }
        };
        object = new Function0<Boolean>(this){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return (Boolean)CustomDisabler.access$getTransEnabled$p(this.this$0).get() != false && !StringsKt.equals((String)CustomDisabler.access$getTransSendMethod$p(this.this$0).get(), "flushall", true);
            }
        };
        this.trans_poll_Min = new IntegerValue(this, object){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super("Transactions-Poll-MinAmount", 1, 1, 300, $super_call_param$1);
            }

            protected void onChanged(int oldValue, int newValue) {
                int v = ((Number)CustomDisabler.access$getTrans_poll_Max$p(this.this$0).get()).intValue();
                if (v < newValue) {
                    this.set(v);
                }
            }
        };
        object = new Function0<Boolean>(this){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return (Boolean)CustomDisabler.access$getTransEnabled$p(this.this$0).get() != false && !StringsKt.equals((String)CustomDisabler.access$getTransSendMethod$p(this.this$0).get(), "flushall", true);
            }
        };
        this.trans_poll_Max = new IntegerValue(this, object){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super("Transactions-Poll-MaxAmount", 1, 1, 300, $super_call_param$1);
            }

            protected void onChanged(int oldValue, int newValue) {
                int v = ((Number)CustomDisabler.access$getTrans_poll_Min$p(this.this$0).get()).intValue();
                if (v > newValue) {
                    this.set(v);
                }
            }
        };
        object = new Function0<Boolean>(this){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return (Boolean)CustomDisabler.access$getAliveEnabled$p(this.this$0).get() != false && !StringsKt.equals((String)CustomDisabler.access$getAliveSendMethod$p(this.this$0).get(), "flushall", true);
            }
        };
        this.alive_poll_Min = new IntegerValue(this, object){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super("KeepAlive-Poll-MinAmount", 1, 1, 300, $super_call_param$1);
            }

            protected void onChanged(int oldValue, int newValue) {
                int v = ((Number)CustomDisabler.access$getAlive_poll_Max$p(this.this$0).get()).intValue();
                if (v < newValue) {
                    this.set(v);
                }
            }
        };
        object = new Function0<Boolean>(this){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return (Boolean)CustomDisabler.access$getAliveEnabled$p(this.this$0).get() != false && !StringsKt.equals((String)CustomDisabler.access$getAliveSendMethod$p(this.this$0).get(), "flushall", true);
            }
        };
        this.alive_poll_Max = new IntegerValue(this, object){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super("KeepAlive-Poll-MaxAmount", 1, 1, 300, $super_call_param$1);
            }

            protected void onChanged(int oldValue, int newValue) {
                int v = ((Number)CustomDisabler.access$getAlive_poll_Min$p(this.this$0).get()).intValue();
                if (v > newValue) {
                    this.set(v);
                }
            }
        };
        this.transBusMinSize = new IntegerValue("Transactions-MinBusSize", 0, 0, 300, new Function0<Boolean>(this){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return (Boolean)CustomDisabler.access$getTransEnabled$p(this.this$0).get() != false && StringsKt.equals((String)CustomDisabler.access$getTransDelayMode$p(this.this$0).get(), "bussize", true);
            }
        });
        this.aliveBusMinSize = new IntegerValue("KeepAlive-MinBusSize", 0, 0, 300, new Function0<Boolean>(this){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return (Boolean)CustomDisabler.access$getAliveEnabled$p(this.this$0).get() != false && StringsKt.equals((String)CustomDisabler.access$getAliveDelayMode$p(this.this$0).get(), "bussize", true);
            }
        });
        this.transDupe = new IntegerValue("Transactions-DupeAmount", 1, 1, 100, "x", new Function0<Boolean>(this){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return (Boolean)CustomDisabler.access$getTransEnabled$p(this.this$0).get();
            }
        });
        this.aliveDupe = new IntegerValue("KeepAlive-DupeAmount", 1, 1, 100, "x", new Function0<Boolean>(this){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return (Boolean)CustomDisabler.access$getAliveEnabled$p(this.this$0).get();
            }
        });
        this.clearTransSent = new BoolValue("Clear-Transactions-After-Send", false, new Function0<Boolean>(this){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return (Boolean)CustomDisabler.access$getTransEnabled$p(this.this$0).get();
            }
        });
        this.clearAliveSent = new BoolValue("Clear-Alive-After-Send", false, new Function0<Boolean>(this){
            final /* synthetic */ CustomDisabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return (Boolean)CustomDisabler.access$getAliveEnabled$p(this.this$0).get();
            }
        });
        this.flushWhenDisable = new BoolValue("Flush-When-Disable", false);
        this.debugValue = new BoolValue("Debug", false);
        this.trans = new LinkedList();
        this.alive = new LinkedList();
        this.msTimerTrans = new MSTimer();
        this.msTimerAlive = new MSTimer();
    }

    public final void debug(@NotNull String s) {
        Intrinsics.checkNotNullParameter(s, "s");
        if (((Boolean)this.debugValue.get()).booleanValue()) {
            ClientUtils.displayChatMessage(Intrinsics.stringPlus("\u00a76[\u00a73\u00a7lCustom Disabler\u00a76]\u00a7f ", s));
        }
    }

    @Override
    public void onEnable() {
        this.lastTransTick = 0L;
        this.lastAliveTick = 0L;
        this.transDelay = RandomUtils.nextInt(((Number)this.trans_sTick_MinDelay.get()).intValue(), ((Number)this.trans_sTick_MaxDelay.get()).intValue());
        this.aliveDelay = RandomUtils.nextInt(((Number)this.alive_sTick_MinDelay.get()).intValue(), ((Number)this.alive_sTick_MaxDelay.get()).intValue());
        this.alive.clear();
        this.trans.clear();
        this.msTimerTrans.reset();
        this.msTimerAlive.reset();
    }

    @Override
    public void onDisable() {
        if (((Boolean)this.flushWhenDisable.get()).booleanValue()) {
            try {
                C00PacketKeepAlive it;
                boolean $i$f$forEach;
                Iterable $this$forEach$iv;
                if (((Boolean)this.aliveEnabled.get()).booleanValue() && !this.alive.isEmpty()) {
                    $this$forEach$iv = this.alive;
                    $i$f$forEach = false;
                    for (Object element$iv : $this$forEach$iv) {
                        it = (C00PacketKeepAlive)element$iv;
                        boolean bl = false;
                        PacketUtils.sendPacketNoEvent((Packet<INetHandlerPlayServer>)((Packet)it));
                    }
                }
                if (((Boolean)this.transEnabled.get()).booleanValue() && !this.trans.isEmpty()) {
                    $this$forEach$iv = this.trans;
                    $i$f$forEach = false;
                    for (Object element$iv : $this$forEach$iv) {
                        it = (C0FPacketConfirmTransaction)element$iv;
                        boolean bl = false;
                        PacketUtils.sendPacketNoEvent((Packet<INetHandlerPlayServer>)((Packet)it));
                    }
                }
            }
            catch (Exception exception) {
                // empty catch block
            }
        }
        this.lastTransTick = 0L;
        this.lastAliveTick = 0L;
        this.transDelay = RandomUtils.nextInt(((Number)this.trans_sTick_MinDelay.get()).intValue(), ((Number)this.trans_sTick_MaxDelay.get()).intValue());
        this.aliveDelay = RandomUtils.nextInt(((Number)this.alive_sTick_MinDelay.get()).intValue(), ((Number)this.alive_sTick_MaxDelay.get()).intValue());
        this.alive.clear();
        this.trans.clear();
        this.msTimerTrans.reset();
        this.msTimerAlive.reset();
        MinecraftInstance.mc.field_71428_T.field_74278_d = 1.0f;
    }

    @EventTarget
    public final void onPacket(@NotNull PacketEvent event) {
        int it;
        int n;
        int n2;
        int n3;
        Intrinsics.checkNotNullParameter(event, "event");
        if (MinecraftInstance.mc.field_71439_g == null || MinecraftInstance.mc.field_71441_e == null) {
            return;
        }
        Packet<?> packet = event.getPacket();
        if (packet instanceof C0FPacketConfirmTransaction && ((Boolean)this.transEnabled.get()).booleanValue()) {
            if (this.lastTransTick != 0L) {
                this.dynTransDelay = (int)(System.currentTimeMillis() - this.lastTransTick);
            }
            this.lastTransTick = System.currentTimeMillis();
            n3 = ((Number)this.transDupe.get()).intValue();
            n2 = 0;
            while (n2 < n3) {
                it = n = n2++;
                boolean bl = false;
                this.trans.add((C0FPacketConfirmTransaction)packet);
            }
            event.cancelEvent();
            this.debug("duped c0f " + ((Number)this.transDupe.get()).intValue() + "x, dynamic delay: " + this.dynTransDelay + "ms. detail: uid " + ((C0FPacketConfirmTransaction)packet).field_149534_b + ", windowId " + ((C0FPacketConfirmTransaction)packet).field_149536_a);
        }
        if (packet instanceof C00PacketKeepAlive && ((Boolean)this.aliveEnabled.get()).booleanValue()) {
            if (this.lastAliveTick != 0L) {
                this.dynAliveDelay = (int)(System.currentTimeMillis() - this.lastAliveTick);
            }
            this.lastAliveTick = System.currentTimeMillis();
            n3 = ((Number)this.aliveDupe.get()).intValue();
            n2 = 0;
            while (n2 < n3) {
                it = n = n2++;
                boolean bl = false;
                this.alive.add((C00PacketKeepAlive)packet);
            }
            event.cancelEvent();
            this.debug("duped c00 " + ((Number)this.aliveDupe.get()).intValue() + "x, dynamic delay: " + this.dynAliveDelay + "ms. detail: key " + ((C00PacketKeepAlive)packet).field_149461_a);
        }
    }

    @EventTarget
    public final void onWorld(@NotNull WorldEvent event) {
        Intrinsics.checkNotNullParameter(event, "event");
        this.lastTransTick = 0L;
        this.lastAliveTick = 0L;
        this.transDelay = RandomUtils.nextInt(((Number)this.trans_sTick_MinDelay.get()).intValue(), ((Number)this.trans_sTick_MaxDelay.get()).intValue());
        this.aliveDelay = RandomUtils.nextInt(((Number)this.alive_sTick_MinDelay.get()).intValue(), ((Number)this.alive_sTick_MaxDelay.get()).intValue());
        this.alive.clear();
        this.trans.clear();
        this.msTimerTrans.reset();
        this.msTimerAlive.reset();
    }

    @EventTarget
    public final void onUpdate(@NotNull UpdateEvent event) {
        block45: {
            int it;
            int n;
            boolean sendWhen;
            String string;
            block43: {
                Intrinsics.checkNotNullParameter(event, "event");
                if (MinecraftInstance.mc.field_71439_g == null || MinecraftInstance.mc.field_71441_e == null) {
                    return;
                }
                if (!((Boolean)this.transEnabled.get()).booleanValue()) break block43;
                string = ((String)this.transDelayMode.get()).toLowerCase();
                Intrinsics.checkNotNullExpressionValue(string, "this as java.lang.String).toLowerCase()");
                switch (string) {
                    case "playertick": {
                        boolean bl;
                        if (MinecraftInstance.mc.field_71439_g.field_70173_aa > 0 && MinecraftInstance.mc.field_71439_g.field_70173_aa % ((Number)this.trans_pTickDelay.get()).intValue() == 0) {
                            bl = true;
                            break;
                        }
                        bl = false;
                        break;
                    }
                    case "systemtick": {
                        boolean bl = this.msTimerTrans.hasTimePassed(this.transDelay);
                        break;
                    }
                    case "dynamic": {
                        boolean bl = this.msTimerTrans.hasTimePassed(this.dynTransDelay);
                        break;
                    }
                    default: {
                        boolean bl = sendWhen = this.trans.size() >= ((Number)this.transBusMinSize.get()).intValue();
                    }
                }
                if (!this.trans.isEmpty() && sendWhen) {
                    if (StringsKt.equals((String)this.transSendMethod.get(), "flushall", true)) {
                        while (this.trans.size() > 0) {
                            PacketUtils.sendPacketNoEvent((Packet<INetHandlerPlayServer>)((Packet)this.trans.poll()));
                        }
                        this.debug("flushed.");
                    } else {
                        int hake = RangesKt.coerceAtMost(RandomUtils.nextInt(((Number)this.trans_poll_Min.get()).intValue(), ((Number)this.trans_poll_Max.get()).intValue()), this.trans.size());
                        n = 0;
                        while (n < hake) {
                            int n2;
                            it = n2 = n++;
                            boolean bl = false;
                            if (((String)this.transSendMethod.get()).equals("pollfirst")) {
                                PacketUtils.sendPacketNoEvent((Packet<INetHandlerPlayServer>)((Packet)this.trans.pollFirst()));
                                continue;
                            }
                            PacketUtils.sendPacketNoEvent((Packet<INetHandlerPlayServer>)((Packet)this.trans.pollLast()));
                        }
                        this.debug("poll " + hake + " times.");
                    }
                    if (((Boolean)this.clearTransSent.get()).booleanValue()) {
                        this.trans.clear();
                    }
                    this.transDelay = RandomUtils.nextInt(((Number)this.trans_sTick_MinDelay.get()).intValue(), ((Number)this.trans_sTick_MaxDelay.get()).intValue());
                    this.msTimerTrans.reset();
                }
            }
            if (!((Boolean)this.aliveEnabled.get()).booleanValue()) break block45;
            string = ((String)this.aliveDelayMode.get()).toLowerCase();
            Intrinsics.checkNotNullExpressionValue(string, "this as java.lang.String).toLowerCase()");
            switch (string) {
                case "playertick": {
                    boolean bl;
                    if (MinecraftInstance.mc.field_71439_g.field_70173_aa > 0 && MinecraftInstance.mc.field_71439_g.field_70173_aa % ((Number)this.alive_pTickDelay.get()).intValue() == 0) {
                        bl = true;
                        break;
                    }
                    bl = false;
                    break;
                }
                case "systemtick": {
                    boolean bl = this.msTimerAlive.hasTimePassed(this.aliveDelay);
                    break;
                }
                case "dynamic": {
                    boolean bl = this.msTimerAlive.hasTimePassed(this.dynAliveDelay);
                    break;
                }
                default: {
                    boolean bl = sendWhen = this.alive.size() >= ((Number)this.aliveBusMinSize.get()).intValue();
                }
            }
            if (!this.alive.isEmpty() && sendWhen) {
                if (StringsKt.equals((String)this.aliveSendMethod.get(), "flushall", true)) {
                    while (this.alive.size() > 0) {
                        PacketUtils.sendPacketNoEvent((Packet<INetHandlerPlayServer>)((Packet)this.alive.poll()));
                    }
                    this.debug("flushed.");
                } else {
                    int hake2 = RangesKt.coerceAtMost(RandomUtils.nextInt(((Number)this.alive_poll_Min.get()).intValue(), ((Number)this.alive_poll_Max.get()).intValue()), this.alive.size());
                    n = 0;
                    while (n < hake2) {
                        int n3;
                        it = n3 = n++;
                        boolean bl = false;
                        if (((String)this.aliveSendMethod.get()).equals("pollfirst")) {
                            PacketUtils.sendPacketNoEvent((Packet<INetHandlerPlayServer>)((Packet)this.alive.pollFirst()));
                            continue;
                        }
                        PacketUtils.sendPacketNoEvent((Packet<INetHandlerPlayServer>)((Packet)this.alive.pollLast()));
                    }
                    this.debug("poll " + hake2 + " times.");
                }
                if (((Boolean)this.clearAliveSent.get()).booleanValue()) {
                    this.alive.clear();
                }
                this.aliveDelay = RandomUtils.nextInt(((Number)this.alive_sTick_MinDelay.get()).intValue(), ((Number)this.alive_sTick_MaxDelay.get()).intValue());
                this.msTimerAlive.reset();
            }
        }
    }

    public static final /* synthetic */ BoolValue access$getTransEnabled$p(CustomDisabler $this) {
        return $this.transEnabled;
    }

    public static final /* synthetic */ BoolValue access$getAliveEnabled$p(CustomDisabler $this) {
        return $this.aliveEnabled;
    }

    public static final /* synthetic */ ListValue access$getTransDelayMode$p(CustomDisabler $this) {
        return $this.transDelayMode;
    }

    public static final /* synthetic */ IntegerValue access$getTrans_sTick_MaxDelay$p(CustomDisabler $this) {
        return $this.trans_sTick_MaxDelay;
    }

    public static final /* synthetic */ IntegerValue access$getTrans_sTick_MinDelay$p(CustomDisabler $this) {
        return $this.trans_sTick_MinDelay;
    }

    public static final /* synthetic */ ListValue access$getAliveDelayMode$p(CustomDisabler $this) {
        return $this.aliveDelayMode;
    }

    public static final /* synthetic */ IntegerValue access$getAlive_sTick_MaxDelay$p(CustomDisabler $this) {
        return $this.alive_sTick_MaxDelay;
    }

    public static final /* synthetic */ IntegerValue access$getAlive_sTick_MinDelay$p(CustomDisabler $this) {
        return $this.alive_sTick_MinDelay;
    }

    public static final /* synthetic */ IntegerValue access$getTrans_poll_Max$p(CustomDisabler $this) {
        return $this.trans_poll_Max;
    }

    public static final /* synthetic */ ListValue access$getTransSendMethod$p(CustomDisabler $this) {
        return $this.transSendMethod;
    }

    public static final /* synthetic */ IntegerValue access$getTrans_poll_Min$p(CustomDisabler $this) {
        return $this.trans_poll_Min;
    }

    public static final /* synthetic */ IntegerValue access$getAlive_poll_Max$p(CustomDisabler $this) {
        return $this.alive_poll_Max;
    }

    public static final /* synthetic */ ListValue access$getAliveSendMethod$p(CustomDisabler $this) {
        return $this.aliveSendMethod;
    }

    public static final /* synthetic */ IntegerValue access$getAlive_poll_Min$p(CustomDisabler $this) {
        return $this.alive_poll_Min;
    }
}


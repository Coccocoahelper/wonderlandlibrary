/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  io.netty.buffer.Unpooled
 *  net.minecraft.client.gui.ScaledResolution
 *  net.minecraft.entity.EntityLivingBase
 *  net.minecraft.init.Items
 *  net.minecraft.network.Packet
 *  net.minecraft.network.PacketBuffer
 *  net.minecraft.network.play.INetHandlerPlayServer
 *  net.minecraft.network.play.client.C00PacketKeepAlive
 *  net.minecraft.network.play.client.C03PacketPlayer
 *  net.minecraft.network.play.client.C03PacketPlayer$C04PacketPlayerPosition
 *  net.minecraft.network.play.client.C03PacketPlayer$C05PacketPlayerLook
 *  net.minecraft.network.play.client.C03PacketPlayer$C06PacketPlayerPosLook
 *  net.minecraft.network.play.client.C08PacketPlayerBlockPlacement
 *  net.minecraft.network.play.client.C09PacketHeldItemChange
 *  net.minecraft.network.play.client.C0APacketAnimation
 *  net.minecraft.network.play.client.C0BPacketEntityAction
 *  net.minecraft.network.play.client.C0CPacketInput
 *  net.minecraft.network.play.client.C0FPacketConfirmTransaction
 *  net.minecraft.network.play.client.C17PacketCustomPayload
 *  net.minecraft.network.play.client.C18PacketSpectate
 *  net.minecraft.network.play.server.S02PacketChat
 *  net.minecraft.network.play.server.S08PacketPlayerPosLook
 *  net.minecraft.util.BlockPos
 *  org.jetbrains.annotations.NotNull
 */
package net.dev.important.modules.module.modules.exploit;

import io.netty.buffer.Unpooled;
import java.awt.Color;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.UUID;
import kotlin.Metadata;
import kotlin.jvm.functions.Function0;
import kotlin.jvm.internal.Intrinsics;
import kotlin.ranges.RangesKt;
import kotlin.text.StringsKt;
import net.dev.important.Client;
import net.dev.important.event.EventState;
import net.dev.important.event.EventTarget;
import net.dev.important.event.MotionEvent;
import net.dev.important.event.PacketEvent;
import net.dev.important.event.Render2DEvent;
import net.dev.important.event.UpdateEvent;
import net.dev.important.event.WorldEvent;
import net.dev.important.gui.client.hud.element.elements.Notification;
import net.dev.important.gui.font.Fonts;
import net.dev.important.modules.module.Category;
import net.dev.important.modules.module.Info;
import net.dev.important.modules.module.Module;
import net.dev.important.modules.module.modules.combat.KillAura;
import net.dev.important.modules.module.modules.movement.Fly;
import net.dev.important.modules.module.modules.movement.Speed;
import net.dev.important.modules.module.modules.movement.TargetStrafe;
import net.dev.important.utils.ClientUtils;
import net.dev.important.utils.MinecraftInstance;
import net.dev.important.utils.MovementUtils;
import net.dev.important.utils.PacketUtils;
import net.dev.important.utils.Rotation;
import net.dev.important.utils.RotationUtils;
import net.dev.important.utils.ServerUtils;
import net.dev.important.utils.misc.RandomUtils;
import net.dev.important.utils.render.RenderUtils;
import net.dev.important.utils.render.Stencil;
import net.dev.important.utils.timer.MSTimer;
import net.dev.important.value.BoolValue;
import net.dev.important.value.IntegerValue;
import net.dev.important.value.ListValue;
import net.minecraft.client.gui.ScaledResolution;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.init.Items;
import net.minecraft.network.Packet;
import net.minecraft.network.PacketBuffer;
import net.minecraft.network.play.INetHandlerPlayServer;
import net.minecraft.network.play.client.C00PacketKeepAlive;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C08PacketPlayerBlockPlacement;
import net.minecraft.network.play.client.C09PacketHeldItemChange;
import net.minecraft.network.play.client.C0APacketAnimation;
import net.minecraft.network.play.client.C0BPacketEntityAction;
import net.minecraft.network.play.client.C0CPacketInput;
import net.minecraft.network.play.client.C0FPacketConfirmTransaction;
import net.minecraft.network.play.client.C17PacketCustomPayload;
import net.minecraft.network.play.client.C18PacketSpectate;
import net.minecraft.network.play.server.S02PacketChat;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;
import net.minecraft.util.BlockPos;
import org.jetbrains.annotations.NotNull;

@Info(name="Patcher", description="Disable some anticheats' checks.", category=Category.EXPLOIT, cnName="\u7ed5\u8fc7\u8865\u4e01")
@Metadata(mv={1, 6, 0}, k=1, xi=48, d1={"\u0000\u00b4\u0001\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u000b\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0007\n\u0002\u0010\b\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\f\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0010\t\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u001e\n\u0002\u0010\u0006\n\u0002\b\u0005\n\u0002\u0010\u0002\n\u0000\n\u0002\u0010\u000e\n\u0002\b\u0004\n\u0002\u0010\n\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\b\u0007\u0018\u00002\u00020\u0001B\u0005\u00a2\u0006\u0002\u0010\u0002J\u000e\u0010Y\u001a\u00020Z2\u0006\u0010[\u001a\u00020\\J\u000e\u0010]\u001a\u00020Z2\u0006\u0010^\u001a\u00020\u0004J\u000e\u0010_\u001a\u00020\u00042\u0006\u0010`\u001a\u00020aJ\u0006\u0010b\u001a\u00020\u0004J\b\u0010c\u001a\u00020ZH\u0016J\b\u0010d\u001a\u00020ZH\u0016J\u0010\u0010e\u001a\u00020Z2\u0006\u0010f\u001a\u00020gH\u0007J\u0010\u0010h\u001a\u00020Z2\u0006\u0010f\u001a\u00020iH\u0007J\u0010\u0010j\u001a\u00020Z2\u0006\u0010f\u001a\u00020kH\u0007J\u0010\u0010l\u001a\u00020Z2\u0006\u0010f\u001a\u00020mH\u0007J\u0010\u0010n\u001a\u00020Z2\u0006\u0010f\u001a\u00020oH\u0007J\u0006\u0010p\u001a\u00020\u0004R\u000e\u0010\u0003\u001a\u00020\u0004X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0005\u001a\u00020\u0004X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0014\u0010\u0006\u001a\b\u0012\u0004\u0012\u00020\b0\u0007X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\t\u001a\u00020\nX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u0011\u0010\u000b\u001a\u00020\u00048F\u00a2\u0006\u0006\u001a\u0004\b\f\u0010\rR\u0011\u0010\u000e\u001a\u00020\u00048F\u00a2\u0006\u0006\u001a\u0004\b\u000f\u0010\rR\u000e\u0010\u0010\u001a\u00020\nX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0011\u001a\u00020\u0012X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0013\u001a\u00020\nX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0014\u001a\u00020\u0004X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0015\u001a\u00020\u0016X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0017\u001a\u00020\nX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0018\u001a\u00020\u0019X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u001a\u001a\u00020\u0012X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u001e\u0010\u001b\u001a\u0012\u0012\u0004\u0012\u00020\b0\u001cj\b\u0012\u0004\u0012\u00020\b`\u001dX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u001e\u001a\u00020\u0012X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u001f\u001a\u00020\nX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010 \u001a\u00020\nX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010!\u001a\u00020\nX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\"\u001a\u00020\nX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010#\u001a\u00020\nX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010$\u001a\u00020\u0019X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010%\u001a\u00020\u0019X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u0011\u0010&\u001a\u00020\u0016\u00a2\u0006\b\n\u0000\u001a\u0004\b'\u0010(R\u000e\u0010)\u001a\u00020*X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010+\u001a\u00020\nX\u0082\u0004\u00a2\u0006\u0002\n\u0000R6\u0010,\u001a*\u0012\u0004\u0012\u00020.\u0012\n\u0012\b\u0012\u0004\u0012\u0002000/0-j\u0014\u0012\u0004\u0012\u00020.\u0012\n\u0012\b\u0012\u0004\u0012\u0002000/`1X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u0014\u00102\u001a\b\u0012\u0004\u0012\u0002030\u0007X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u0014\u00104\u001a\b\u0012\u0004\u0012\u0002050\u0007X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u00106\u001a\u00020\u0016X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u00107\u001a\u00020\u0016X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u00108\u001a\u00020\u0019X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u001a\u00109\u001a\u000e\u0012\n\u0012\b\u0012\u0004\u0012\u0002000/0\u0007X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010:\u001a\u00020\u0012X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0011\u0010;\u001a\u00020\n\u00a2\u0006\b\n\u0000\u001a\u0004\b<\u0010=R\u000e\u0010>\u001a\u00020\nX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010?\u001a\u00020\u0012X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010@\u001a\u00020\u0012X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010A\u001a\u00020\u0004X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u001a\u0010B\u001a\u00020\u0004X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\bC\u0010\r\"\u0004\bD\u0010ER\u000e\u0010F\u001a\u00020\u0019X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010G\u001a\u00020\nX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010H\u001a\u00020\u0012X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010I\u001a\u00020\nX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010J\u001a\u00020\u0012X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u001e\u0010K\u001a\u0012\u0012\u0004\u0012\u0002030\u001cj\b\u0012\u0004\u0012\u000203`\u001dX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010L\u001a\u00020\nX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010M\u001a\u00020\u0019X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010N\u001a\u00020\nX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010O\u001a\u00020\nX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010P\u001a\u00020\nX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010Q\u001a\u00020\u0019X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010R\u001a\u00020\nX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010S\u001a\u00020TX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010U\u001a\u00020\u0019X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010V\u001a\u00020\nX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010W\u001a\u00020\nX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010X\u001a\u00020*X\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006q"}, d2={"Lnet/dev/important/modules/module/modules/exploit/Disabler;", "Lnet/dev/important/modules/module/Module;", "()V", "alrSendY", "", "alrSprint", "anotherQueue", "Ljava/util/LinkedList;", "Lnet/minecraft/network/play/client/C00PacketKeepAlive;", "autoAlert", "Lnet/dev/important/value/BoolValue;", "canModifyRotation", "getCanModifyRotation", "()Z", "canRenderInto3D", "getCanRenderInto3D", "checkValid", "counter", "", "debugValue", "expectedSetback", "flagMode", "Lnet/dev/important/value/ListValue;", "flagSilent", "flagTick", "Lnet/dev/important/value/IntegerValue;", "hacked", "keepAlives", "Ljava/util/ArrayList;", "Lkotlin/collections/ArrayList;", "lastTick", "matrixHotbarChange", "matrixMoveFix", "matrixMoveOnly", "matrixNoCheck", "matrixNoMovePacket", "maxpsf", "minpsf", "modeValue", "getModeValue", "()Lnet/dev/important/value/ListValue;", "msTimer", "Lnet/dev/important/utils/timer/MSTimer;", "noC03s", "packetBus", "Ljava/util/HashMap;", "", "Lnet/minecraft/network/Packet;", "Lnet/minecraft/network/play/INetHandlerPlayServer;", "Lkotlin/collections/HashMap;", "packetQueue", "Lnet/minecraft/network/play/client/C0FPacketConfirmTransaction;", "playerQueue", "Lnet/minecraft/network/play/client/C03PacketPlayer;", "psfSendMode", "psfStartSendMode", "psfWorldDelay", "queueBus", "randDelay", "renderServer", "getRenderServer", "()Lnet/dev/important/value/BoolValue;", "rotModify", "s08count", "sendDelay", "shouldActive", "shouldModifyRotation", "getShouldModifyRotation", "setShouldModifyRotation", "(Z)V", "testDelay", "testFeature", "ticking", "tifality90", "transCount", "transactions", "verusAntiFlyCheck", "verusBufferSizeValue", "verusConditionCheck", "verusExpectFlag", "verusFakeInput", "verusFlagDelayValue", "verusFlagValue", "verusLastY", "", "verusPurseDelayValue", "verusSlientFlagApplyValue", "verusValidPos", "wdTimer", "debug", "", "s", "", "flush", "check", "isInventory", "action", "", "isMoving", "onDisable", "onEnable", "onMotion", "event", "Lnet/dev/important/event/MotionEvent;", "onPacket", "Lnet/dev/important/event/PacketEvent;", "onRender2D", "Lnet/dev/important/event/Render2DEvent;", "onUpdate", "Lnet/dev/important/event/UpdateEvent;", "onWorld", "Lnet/dev/important/event/WorldEvent;", "shouldRun", "LiquidBounce"})
public final class Disabler
extends Module {
    @NotNull
    private final ListValue modeValue;
    @NotNull
    private final IntegerValue minpsf;
    @NotNull
    private final IntegerValue maxpsf;
    @NotNull
    private final ListValue psfStartSendMode;
    @NotNull
    private final ListValue psfSendMode;
    @NotNull
    private final IntegerValue psfWorldDelay;
    @NotNull
    private final ListValue flagMode;
    @NotNull
    private final IntegerValue flagTick;
    @NotNull
    private final BoolValue flagSilent;
    @NotNull
    private final BoolValue matrixNoCheck;
    @NotNull
    private final BoolValue matrixMoveFix;
    @NotNull
    private final BoolValue matrixMoveOnly;
    @NotNull
    private final BoolValue matrixNoMovePacket;
    @NotNull
    private final BoolValue matrixHotbarChange;
    @NotNull
    private final BoolValue verusFlagValue;
    @NotNull
    private final BoolValue verusSlientFlagApplyValue;
    @NotNull
    private final IntegerValue verusBufferSizeValue;
    @NotNull
    private final IntegerValue verusPurseDelayValue;
    @NotNull
    private final IntegerValue verusFlagDelayValue;
    @NotNull
    private final BoolValue verusConditionCheck;
    @NotNull
    private final BoolValue verusAntiFlyCheck;
    @NotNull
    private final BoolValue verusFakeInput;
    @NotNull
    private final BoolValue verusValidPos;
    @NotNull
    private final BoolValue verusExpectFlag;
    @NotNull
    private final BoolValue renderServer;
    @NotNull
    private final BoolValue autoAlert;
    @NotNull
    private final BoolValue rotModify;
    @NotNull
    private final BoolValue tifality90;
    @NotNull
    private final BoolValue noC03s;
    @NotNull
    private final BoolValue testFeature;
    @NotNull
    private final IntegerValue testDelay;
    @NotNull
    private final BoolValue checkValid;
    @NotNull
    private final BoolValue debugValue;
    @NotNull
    private final ArrayList<C00PacketKeepAlive> keepAlives;
    @NotNull
    private final ArrayList<C0FPacketConfirmTransaction> transactions;
    @NotNull
    private final LinkedList<C0FPacketConfirmTransaction> packetQueue;
    @NotNull
    private final LinkedList<C00PacketKeepAlive> anotherQueue;
    @NotNull
    private final LinkedList<C03PacketPlayer> playerQueue;
    @NotNull
    private final HashMap<Long, Packet<INetHandlerPlayServer>> packetBus;
    @NotNull
    private final LinkedList<Packet<INetHandlerPlayServer>> queueBus;
    @NotNull
    private final MSTimer msTimer;
    @NotNull
    private final MSTimer wdTimer;
    private boolean alrSendY;
    private boolean alrSprint;
    private boolean expectedSetback;
    private int sendDelay;
    private boolean shouldActive;
    private int transCount;
    private int counter;
    private int randDelay;
    private int hacked;
    private boolean shouldModifyRotation;
    private double verusLastY;
    private int lastTick;
    private int s08count;
    private int ticking;

    public Disabler() {
        String[] stringArray = new String[]{"Basic", "OldMatrix", "OldGhostly", "Kauri", "OldVerus", "PingSpoof", "Matrix", "Hypixel"};
        this.modeValue = new ListValue("Mode", stringArray, "Basic");
        stringArray = new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "pingspoof", true);
            }
        };
        this.minpsf = new IntegerValue(this, stringArray){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super("PingSpoof-MinDelay", 0, 0, 10000, "ms", $super_call_param$1);
            }

            protected void onChanged(int oldValue, int newValue) {
                int v = ((Number)Disabler.access$getMaxpsf$p(this.this$0).get()).intValue();
                if (v < newValue) {
                    this.set(v);
                }
            }
        };
        stringArray = new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "pingspoof", true);
            }
        };
        this.maxpsf = new IntegerValue(this, stringArray){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super("PingSpoof-MaxDelay", 0, 0, 10000, "ms", $super_call_param$1);
            }

            protected void onChanged(int oldValue, int newValue) {
                int v = ((Number)Disabler.access$getMinpsf$p(this.this$0).get()).intValue();
                if (v > newValue) {
                    this.set(v);
                }
            }
        };
        stringArray = new String[]{"All", "First"};
        this.psfStartSendMode = new ListValue("PingSpoof-StartSendMode", stringArray, "All", new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "pingspoof", true);
            }
        });
        stringArray = new String[]{"All", "First"};
        this.psfSendMode = new ListValue("PingSpoof-SendMode", stringArray, "All", new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "pingspoof", true);
            }
        });
        this.psfWorldDelay = new IntegerValue("PingSpoof-WorldDelay", 15000, 0, 30000, "ms", new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "pingspoof", true);
            }
        });
        stringArray = new String[]{"Edit", "Packet"};
        this.flagMode = new ListValue("Flag-Mode", stringArray, "Edit", new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "flag", true);
            }
        });
        this.flagTick = new IntegerValue("Flag-TickDelay", 25, 1, 200, new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "flag", true);
            }
        });
        this.flagSilent = new BoolValue("Flag-SilentMode", true, new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "flag", true);
            }
        });
        this.matrixNoCheck = new BoolValue("Matrix-NoModuleCheck", false, new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "matrix", true);
            }
        });
        this.matrixMoveFix = new BoolValue("Matrix-MoveFix", true, new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "matrix", true);
            }
        });
        this.matrixMoveOnly = new BoolValue("Matrix-MoveOnly", false, new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "matrix", true);
            }
        });
        this.matrixNoMovePacket = new BoolValue("Matrix-NoMovePacket", true, new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "matrix", true);
            }
        });
        this.matrixHotbarChange = new BoolValue("Matrix-HotbarChange", true, new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "matrix", true);
            }
        });
        this.verusFlagValue = new BoolValue("Verus-Flag", true, new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "oldverus", true);
            }
        });
        this.verusSlientFlagApplyValue = new BoolValue("Verus-SlientFlagApply", false, new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "oldverus", true);
            }
        });
        this.verusBufferSizeValue = new IntegerValue("Verus-QueueActiveSize", 300, 0, 1000, new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "oldverus", true);
            }
        });
        this.verusPurseDelayValue = new IntegerValue("Verus-PurseDelay", 490, 0, 2000, "ms", new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "oldverus", true);
            }
        });
        this.verusFlagDelayValue = new IntegerValue("Verus-FlagDelay", 40, 40, 120, " tick", new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "oldverus", true);
            }
        });
        this.verusConditionCheck = new BoolValue("Verus-QueueCheck", true, new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "oldverus", true);
            }
        });
        this.verusAntiFlyCheck = new BoolValue("Verus-AntiFly", true, new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "oldverus", true);
            }
        });
        this.verusFakeInput = new BoolValue("Verus-FakeInput", true, new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "oldverus", true);
            }
        });
        this.verusValidPos = new BoolValue("Verus-ValidPosition", true, new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "oldverus", true);
            }
        });
        this.verusExpectFlag = new BoolValue("Verus-ExpectFlag", true, new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "oldverus", true);
            }
        });
        this.renderServer = new BoolValue("Render-ServerSide", false, new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "hypixel", true);
            }
        });
        this.autoAlert = new BoolValue("BanAlert", false, new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "hypixel", true);
            }
        });
        this.rotModify = new BoolValue("RotationModifier", false, new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "hypixel", true);
            }
        });
        this.tifality90 = new BoolValue("Tifality", false, new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "hypixel", true) && (Boolean)Disabler.access$getRotModify$p(this.this$0).get() != false;
            }
        });
        this.noC03s = new BoolValue("NoC03s", true, new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "hypixel", true);
            }
        });
        this.testFeature = new BoolValue("PingSpoof", true, new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "hypixel", true);
            }
        });
        this.testDelay = new IntegerValue("Delay", 400, 0, 1000, "ms", new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "hypixel", true) && (Boolean)Disabler.access$getTestFeature$p(this.this$0).get() != false;
            }
        });
        this.checkValid = new BoolValue("InvValidate", false, new Function0<Boolean>(this){
            final /* synthetic */ Disabler this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return StringsKt.equals((String)this.this$0.getModeValue().get(), "hypixel", true) && (Boolean)Disabler.access$getTestFeature$p(this.this$0).get() != false;
            }
        });
        this.debugValue = new BoolValue("Debug", false);
        this.keepAlives = new ArrayList();
        this.transactions = new ArrayList();
        this.packetQueue = new LinkedList();
        this.anotherQueue = new LinkedList();
        this.playerQueue = new LinkedList();
        this.packetBus = new HashMap();
        this.queueBus = new LinkedList();
        this.msTimer = new MSTimer();
        this.wdTimer = new MSTimer();
        this.randDelay = 250;
        this.hacked = 100;
    }

    @NotNull
    public final ListValue getModeValue() {
        return this.modeValue;
    }

    @NotNull
    public final BoolValue getRenderServer() {
        return this.renderServer;
    }

    public final boolean getShouldModifyRotation() {
        return this.shouldModifyRotation;
    }

    public final void setShouldModifyRotation(boolean bl) {
        this.shouldModifyRotation = bl;
    }

    public final boolean getCanModifyRotation() {
        return this.getState() && StringsKt.equals((String)this.modeValue.get(), "hypixel", true) && this.shouldModifyRotation;
    }

    public final boolean getCanRenderInto3D() {
        return this.getState() && StringsKt.equals((String)this.modeValue.get(), "hypixel", true) && (Boolean)this.renderServer.get() != false && this.shouldModifyRotation;
    }

    public final boolean isMoving() {
        return MinecraftInstance.mc.field_71439_g != null && (!(MinecraftInstance.mc.field_71439_g.field_71158_b.field_78900_b == 0.0f) || !(MinecraftInstance.mc.field_71439_g.field_71158_b.field_78902_a == 0.0f) || MinecraftInstance.mc.field_71439_g.field_71158_b.field_78899_d || MinecraftInstance.mc.field_71439_g.field_71158_b.field_78901_c);
    }

    public final void debug(@NotNull String s) {
        Intrinsics.checkNotNullParameter(s, "s");
        if (((Boolean)this.debugValue.get()).booleanValue()) {
            ClientUtils.displayChatMessage("http://29pen.com");
        }
    }

    public final boolean shouldRun() {
        return MinecraftInstance.mc.field_71439_g != null && MinecraftInstance.mc.field_71439_g.field_71071_by != null && !MinecraftInstance.mc.field_71439_g.field_71071_by.func_146028_b(Items.field_151111_aL) && MinecraftInstance.mc.field_71439_g.field_70173_aa > 5;
    }

    public final boolean isInventory(short action) {
        return action > 0 && action < 100;
    }

    @Override
    public void onEnable() {
        this.keepAlives.clear();
        this.transactions.clear();
        this.packetQueue.clear();
        this.anotherQueue.clear();
        this.playerQueue.clear();
        this.packetBus.clear();
        this.queueBus.clear();
        this.s08count = 0;
        this.msTimer.reset();
        this.wdTimer.reset();
        this.expectedSetback = false;
        this.shouldActive = false;
        this.alrSendY = false;
        this.alrSprint = false;
        this.transCount = 0;
        this.lastTick = 0;
        this.ticking = 0;
        this.shouldModifyRotation = false;
    }

    @Override
    public void onDisable() {
        boolean bl;
        C00PacketKeepAlive it;
        Iterable $this$forEach$iv = this.keepAlives;
        boolean bl2 = false;
        for (Object element$iv : $this$forEach$iv) {
            it = (C00PacketKeepAlive)element$iv;
            bl = false;
            PacketUtils.sendPacketNoEvent((Packet<INetHandlerPlayServer>)((Packet)it));
        }
        $this$forEach$iv = this.transactions;
        boolean bl3 = false;
        for (Object element$iv : $this$forEach$iv) {
            it = (C0FPacketConfirmTransaction)element$iv;
            bl = false;
            PacketUtils.sendPacketNoEvent((Packet<INetHandlerPlayServer>)((Packet)it));
        }
        this.keepAlives.clear();
        this.transactions.clear();
        this.packetQueue.clear();
        this.anotherQueue.clear();
        this.packetBus.clear();
        if (StringsKt.equals((String)this.modeValue.get(), "hypixel", true)) {
            $this$forEach$iv = this.anotherQueue;
            boolean bl4 = false;
            for (Object element$iv : $this$forEach$iv) {
                it = (C00PacketKeepAlive)element$iv;
                bl = false;
                PacketUtils.sendPacketNoEvent((Packet<INetHandlerPlayServer>)((Packet)it));
            }
            $this$forEach$iv = this.packetQueue;
            boolean bl5 = false;
            for (Object element$iv : $this$forEach$iv) {
                it = (C0FPacketConfirmTransaction)element$iv;
                bl = false;
                PacketUtils.sendPacketNoEvent((Packet<INetHandlerPlayServer>)((Packet)it));
            }
        }
        if (StringsKt.equals((String)this.modeValue.get(), "pingspoof", true)) {
            for (Packet packet : this.queueBus) {
                PacketUtils.sendPacketNoEvent((Packet<INetHandlerPlayServer>)packet);
            }
        }
        this.queueBus.clear();
        this.msTimer.reset();
        MinecraftInstance.mc.field_71439_g.field_70181_x = 0.0;
        MovementUtils.strafe(0.0f);
        MinecraftInstance.mc.field_71428_T.field_74278_d = 1.0f;
        this.shouldModifyRotation = false;
    }

    @EventTarget
    public final void onWorld(@NotNull WorldEvent event) {
        Intrinsics.checkNotNullParameter(event, "event");
        this.transactions.clear();
        this.keepAlives.clear();
        this.packetQueue.clear();
        this.anotherQueue.clear();
        this.packetBus.clear();
        this.queueBus.clear();
        this.s08count = 0;
        this.msTimer.reset();
        this.wdTimer.reset();
        this.expectedSetback = false;
        this.shouldActive = false;
        this.alrSendY = false;
        this.alrSprint = false;
        this.transCount = 0;
        this.counter = 0;
        this.lastTick = 0;
        this.ticking = 0;
    }

    @EventTarget
    public final void onRender2D(@NotNull Render2DEvent event) {
        Intrinsics.checkNotNullParameter(event, "event");
        if (!this.shouldActive) {
            ScaledResolution sc = new ScaledResolution(MinecraftInstance.mc);
            float strength = RangesKt.coerceIn((float)this.msTimer.hasTimeLeft(((Number)this.psfWorldDelay.get()).intValue()) / (float)((Number)this.psfWorldDelay.get()).intValue(), 0.0f, 1.0f);
            if (StringsKt.equals((String)this.modeValue.get(), "pingspoof", true)) {
                Stencil.write(true);
                RenderUtils.drawRoundedRect((float)sc.func_78326_a() / 2.0f - 50.0f, 35.0f, (float)sc.func_78326_a() / 2.0f + 50.0f, 55.0f, 10.0f, new Color(0, 0, 0, 140).getRGB());
                Stencil.erase(true);
                RenderUtils.drawRect((float)sc.func_78326_a() / 2.0f - 50.0f, 35.0f, (float)sc.func_78326_a() / 2.0f - 50.0f + 100.0f * strength, 55.0f, new Color(0, 111, 255, 70).getRGB());
                Stencil.dispose();
                Fonts.font40.drawCenteredString((int)((float)this.msTimer.hasTimeLeft(((Number)this.psfWorldDelay.get()).intValue()) / 1000.0f) + "s left...", (float)sc.func_78326_a() / 2.0f, 41.0f, -1);
            }
        }
    }

    @EventTarget
    public final void onPacket(@NotNull PacketEvent event) {
        Intrinsics.checkNotNullParameter(event, "event");
        Packet<?> packet = event.getPacket();
        String string = ((String)this.modeValue.get()).toLowerCase();
        Intrinsics.checkNotNullExpressionValue(string, "this as java.lang.String).toLowerCase()");
        switch (string) {
            case "oldmatrix": {
                if (!(packet instanceof C03PacketPlayer) || MinecraftInstance.mc.field_71439_g.field_70173_aa % 15 != 0) break;
                try {
                    ByteArrayOutputStream b = new ByteArrayOutputStream();
                    DataOutputStream _out = new DataOutputStream(b);
                    _out.writeUTF(MinecraftInstance.mc.field_71439_g.func_146103_bH().getName());
                    PacketBuffer buf = new PacketBuffer(Unpooled.buffer());
                    buf.writeBytes(b.toByteArray());
                    MinecraftInstance.mc.func_147114_u().func_147297_a((Packet)new C17PacketCustomPayload("matrix:geyser", buf));
                    this.debug("Sent Matrix Geyser spoof packet.");
                }
                catch (IOException e) {
                    this.debug("Error occurred.");
                }
                break;
            }
            case "antidimples": {
                ClientUtils.displayChatMessage("\u62df\u5417\u2463\u52d2");
                break;
            }
            case "kauri": {
                if (!(packet instanceof C0FPacketConfirmTransaction)) break;
                event.cancelEvent();
                break;
            }
            case "riding": {
                if (!(packet instanceof C03PacketPlayer)) break;
                MinecraftInstance.mc.func_147114_u().func_147297_a((Packet)new C0CPacketInput(MinecraftInstance.mc.field_71439_g.field_70702_br, MinecraftInstance.mc.field_71439_g.field_70701_bs, MinecraftInstance.mc.field_71439_g.field_71158_b.field_78901_c, MinecraftInstance.mc.field_71439_g.field_71158_b.field_78899_d));
                break;
            }
            case "ridingv2": {
                if (!(packet instanceof C03PacketPlayer) && !(packet instanceof C0BPacketEntityAction)) break;
                event.cancelEvent();
                break;
            }
            case "basic": {
                if (!(packet instanceof C0FPacketConfirmTransaction) && !(packet instanceof C00PacketKeepAlive)) break;
                event.cancelEvent();
                break;
            }
            case "oldghostly": {
                if (packet instanceof C03PacketPlayer) {
                    MinecraftInstance.mc.func_147114_u().func_147297_a((Packet)new C0CPacketInput());
                }
                if (!(packet instanceof C0FPacketConfirmTransaction) && !(packet instanceof C00PacketKeepAlive)) break;
                event.cancelEvent();
                break;
            }
            case "spartancombat": {
                if (packet instanceof C00PacketKeepAlive && (this.keepAlives.size() <= 0 || !Intrinsics.areEqual(packet, this.keepAlives.get(this.keepAlives.size() - 1)))) {
                    this.debug("c00 added");
                    this.keepAlives.add((C00PacketKeepAlive)packet);
                    event.cancelEvent();
                }
                if (!(packet instanceof C0FPacketConfirmTransaction) || this.transactions.size() > 0 && Intrinsics.areEqual(packet, this.transactions.get(this.transactions.size() - 1))) break;
                this.debug("c0f added");
                this.transactions.add((C0FPacketConfirmTransaction)packet);
                event.cancelEvent();
                break;
            }
            case "spectate": {
                if (!(packet instanceof C03PacketPlayer)) break;
                MinecraftInstance.mc.func_147114_u().func_147297_a((Packet)new C18PacketSpectate(MinecraftInstance.mc.field_71439_g.func_110124_au()));
                break;
            }
            case "spectatev2": {
                if (!(packet instanceof C03PacketPlayer)) break;
                MinecraftInstance.mc.func_147114_u().func_147297_a((Packet)new C18PacketSpectate(UUID.randomUUID()));
                break;
            }
            case "oldverus": {
                double z;
                double y;
                double x;
                double diff;
                if (!this.shouldRun()) {
                    this.msTimer.reset();
                    this.packetQueue.clear();
                    return;
                }
                if (packet instanceof C0FPacketConfirmTransaction && !this.isInventory(((C0FPacketConfirmTransaction)packet).field_149534_b)) {
                    this.packetQueue.add((C0FPacketConfirmTransaction)packet);
                    event.cancelEvent();
                    if (this.packetQueue.size() > ((Number)this.verusBufferSizeValue.get()).intValue()) {
                        if (!this.shouldActive) {
                            this.shouldActive = true;
                            Client.INSTANCE.getHud().addNotification(new Notification("Successfully put Verus into sleep.", Notification.Type.SUCCESS));
                        }
                        PacketUtils.sendPacketNoEvent((Packet<INetHandlerPlayServer>)((Packet)this.packetQueue.poll()));
                    }
                    this.debug(Intrinsics.stringPlus("c0f, ", this.packetQueue.size()));
                }
                if (packet instanceof C0BPacketEntityAction) {
                    event.cancelEvent();
                    this.debug("ignored packet action");
                }
                if (packet instanceof C03PacketPlayer) {
                    if (((Boolean)this.verusFlagValue.get()).booleanValue() && MinecraftInstance.mc.field_71439_g.field_70173_aa % ((Number)this.verusFlagDelayValue.get()).intValue() == 0) {
                        this.debug("modified c03");
                        ((C03PacketPlayer)packet).field_149477_b -= 11.015625;
                        ((C03PacketPlayer)packet).field_149474_g = false;
                        ((C03PacketPlayer)packet).func_149469_a(false);
                        if (((Boolean)this.verusExpectFlag.get()).booleanValue()) {
                            this.expectedSetback = true;
                            this.ticking = 1;
                        }
                    }
                    if (((Boolean)this.verusValidPos.get()).booleanValue() && (packet instanceof C03PacketPlayer.C04PacketPlayerPosition || packet instanceof C03PacketPlayer.C06PacketPlayerPosLook)) {
                        ((C03PacketPlayer)packet).field_149477_b = Math.rint(((C03PacketPlayer)packet).field_149477_b / 0.015625) * 0.015625;
                    }
                    if (this.ticking > 0) {
                        if (this.ticking > 2) {
                            this.ticking = 0;
                            return;
                        }
                        ((C03PacketPlayer)packet).field_149477_b = this.ticking % 2 == 0 ? 256.0 : 3.015625;
                        ((C03PacketPlayer)packet).field_149474_g = false;
                        ((C03PacketPlayer)packet).func_149469_a(false);
                        int e = this.ticking;
                        this.ticking = e + 1;
                        this.expectedSetback = true;
                    }
                }
                if (!(packet instanceof S08PacketPlayerPosLook) || !((Boolean)this.verusSlientFlagApplyValue.get()).booleanValue() || !((diff = Math.sqrt((x = ((S08PacketPlayerPosLook)packet).func_148932_c() - MinecraftInstance.mc.field_71439_g.field_70165_t) * x + (y = ((S08PacketPlayerPosLook)packet).func_148928_d() - MinecraftInstance.mc.field_71439_g.field_70163_u) * y + (z = ((S08PacketPlayerPosLook)packet).func_148933_e() - MinecraftInstance.mc.field_71439_g.field_70161_v) * z)) <= 8.0) && !this.expectedSetback) break;
                event.cancelEvent();
                this.debug("flag silent accept");
                PacketUtils.sendPacketNoEvent((Packet<INetHandlerPlayServer>)((Packet)new C03PacketPlayer.C06PacketPlayerPosLook(((S08PacketPlayerPosLook)packet).func_148932_c(), ((S08PacketPlayerPosLook)packet).func_148928_d(), ((S08PacketPlayerPosLook)packet).func_148933_e(), ((S08PacketPlayerPosLook)packet).func_148931_f(), ((S08PacketPlayerPosLook)packet).func_148930_g(), MinecraftInstance.mc.field_71439_g.field_70122_E)));
                this.expectedSetback = false;
                break;
            }
            case "pingspoof": {
                if (packet instanceof C0FPacketConfirmTransaction && !this.isInventory(((C0FPacketConfirmTransaction)packet).field_149534_b)) {
                    this.queueBus.add(packet);
                    event.cancelEvent();
                    this.debug("c0f added, action id " + ((C0FPacketConfirmTransaction)packet).field_149534_b + ", target id " + ((C0FPacketConfirmTransaction)packet).field_149536_a);
                }
                if (!(packet instanceof C00PacketKeepAlive)) break;
                this.queueBus.add(packet);
                event.cancelEvent();
                this.debug(Intrinsics.stringPlus("c00 added, key ", ((C00PacketKeepAlive)packet).field_149461_a));
                break;
            }
            case "matrix": {
                if (!((Boolean)this.matrixNoCheck.get()).booleanValue()) {
                    Module module2 = Client.INSTANCE.getModuleManager().getModule(Speed.class);
                    Intrinsics.checkNotNull(module2);
                    if (!module2.getState()) {
                        Module module3 = Client.INSTANCE.getModuleManager().getModule(Fly.class);
                        Intrinsics.checkNotNull(module3);
                        if (!module3.getState()) break;
                    }
                }
                if (!(packet instanceof C03PacketPlayer)) break;
                if (((Boolean)this.matrixNoMovePacket.get()).booleanValue() && !((C03PacketPlayer)packet).func_149466_j()) {
                    event.cancelEvent();
                    this.debug("no move, cancelled");
                    return;
                }
                if (!((Boolean)this.matrixMoveFix.get()).booleanValue()) break;
                ((C03PacketPlayer)packet).field_149474_g = true;
                if (((C03PacketPlayer)packet).field_149481_i) break;
                ((C03PacketPlayer)packet).field_149481_i = true;
                ((C03PacketPlayer)packet).field_149476_e = MinecraftInstance.mc.field_71439_g.field_70177_z;
                ((C03PacketPlayer)packet).field_149473_f = MinecraftInstance.mc.field_71439_g.field_70125_A;
                break;
            }
            case "hypixel": {
                if (MinecraftInstance.mc.func_71356_B()) {
                    return;
                }
                if (((Boolean)this.autoAlert.get()).booleanValue() && packet instanceof S02PacketChat) {
                    String string2 = ((S02PacketChat)packet).func_148915_c().func_150260_c();
                    Intrinsics.checkNotNullExpressionValue(string2, "packet.getChatComponent().getUnformattedText()");
                    if (StringsKt.contains((CharSequence)string2, "Cages opened!", true)) {
                        Client.INSTANCE.getHud().addNotification(new Notification("Don't open Speed at 20Second", Notification.Type.WARNING, 20000L));
                    }
                }
                if (((Boolean)this.testFeature.get()).booleanValue() && !ServerUtils.isHypixelLobby()) {
                    if (!(!(packet instanceof C0FPacketConfirmTransaction) || ((Boolean)this.checkValid.get()).booleanValue() && this.isInventory(((C0FPacketConfirmTransaction)packet).field_149534_b))) {
                        event.cancelEvent();
                        this.packetQueue.add((C0FPacketConfirmTransaction)packet);
                        this.debug("c0f, " + ((C0FPacketConfirmTransaction)packet).field_149534_b + " ID, " + ((C0FPacketConfirmTransaction)packet).field_149536_a + " wID");
                        if (!this.shouldActive) {
                            this.shouldActive = true;
                            this.debug("activated");
                        }
                    }
                    if (packet instanceof C00PacketKeepAlive) {
                        event.cancelEvent();
                        this.anotherQueue.add((C00PacketKeepAlive)packet);
                        this.wdTimer.reset();
                        this.debug(Intrinsics.stringPlus("C00, ", ((C00PacketKeepAlive)packet).field_149461_a));
                    }
                    if ((packet instanceof C03PacketPlayer || packet instanceof C0BPacketEntityAction || packet instanceof C08PacketPlayerBlockPlacement || packet instanceof C0APacketAnimation) && !this.shouldActive) {
                        event.cancelEvent();
                    }
                    if (packet instanceof S08PacketPlayerPosLook && !this.shouldActive) {
                        if (this.alrSendY) {
                            event.cancelEvent();
                            this.debug("no S08");
                        } else {
                            this.alrSendY = true;
                            this.debug("first S08, ignore");
                        }
                    }
                }
                if (!((Boolean)this.noC03s.get()).booleanValue() || !(packet instanceof C03PacketPlayer) || packet instanceof C03PacketPlayer.C04PacketPlayerPosition || packet instanceof C03PacketPlayer.C05PacketPlayerLook || packet instanceof C03PacketPlayer.C06PacketPlayerPosLook) break;
                event.cancelEvent();
            }
        }
    }

    public final void flush(boolean check) {
        if (StringsKt.equals(check ? (String)this.psfSendMode.get() : (String)this.psfStartSendMode.get(), "all", true)) {
            while (this.queueBus.size() > 0) {
                PacketUtils.sendPacketNoEvent(this.queueBus.poll());
            }
        } else {
            PacketUtils.sendPacketNoEvent(this.queueBus.poll());
        }
    }

    @EventTarget(priority=1)
    public final void onMotion(@NotNull MotionEvent event) {
        block16: {
            block17: {
                Intrinsics.checkNotNullParameter(event, "event");
                Module module2 = Client.INSTANCE.getModuleManager().getModule(KillAura.class);
                Intrinsics.checkNotNull(module2);
                KillAura killAura = (KillAura)module2;
                Module module3 = Client.INSTANCE.getModuleManager().getModule(Speed.class);
                Intrinsics.checkNotNull(module3);
                Speed speed = (Speed)module3;
                Module module4 = Client.INSTANCE.getModuleManager().getModule(Fly.class);
                Intrinsics.checkNotNull(module4);
                Fly fly = (Fly)module4;
                Module module5 = Client.INSTANCE.getModuleManager().getModule(TargetStrafe.class);
                Intrinsics.checkNotNull(module5);
                TargetStrafe targetStrafe = (TargetStrafe)module5;
                if (StringsKt.equals((String)this.modeValue.get(), "hypixel", true)) {
                    this.shouldModifyRotation = false;
                    if (event.getEventState() == EventState.PRE) {
                        if (speed.getState() && ((Boolean)this.rotModify.get()).booleanValue()) {
                            this.shouldModifyRotation = true;
                            if (MovementUtils.isMoving()) {
                                float f;
                                if (targetStrafe.getCanStrafe()) {
                                    EntityLivingBase entityLivingBase = killAura.getTarget();
                                    Intrinsics.checkNotNull(entityLivingBase);
                                    f = RotationUtils.getRotationsEntity(entityLivingBase).getYaw() + (targetStrafe.getDirection() > 0 ? -90.0f : 90.0f);
                                } else {
                                    f = MovementUtils.getRawDirection();
                                }
                                float cYaw = f;
                                event.setYaw(cYaw);
                                if (((Boolean)this.tifality90.get()).booleanValue()) {
                                    event.setPitch(90.0f);
                                }
                                RotationUtils.setTargetRotation(new Rotation(cYaw, (Boolean)this.tifality90.get() != false ? 90.0f : event.getPitch()), 2);
                            }
                        }
                        if (((Boolean)this.testFeature.get()).booleanValue() && !ServerUtils.isHypixelLobby() && this.shouldActive && this.wdTimer.hasTimePassed(((Number)this.testDelay.get()).intValue())) {
                            while (!this.anotherQueue.isEmpty()) {
                                PacketUtils.sendPacketNoEvent((Packet<INetHandlerPlayServer>)((Packet)this.anotherQueue.poll()));
                                this.debug(Intrinsics.stringPlus("c00, ", this.anotherQueue.size()));
                            }
                            while (!this.packetQueue.isEmpty()) {
                                PacketUtils.sendPacketNoEvent((Packet<INetHandlerPlayServer>)((Packet)this.packetQueue.poll()));
                                this.debug(Intrinsics.stringPlus("c0f, ", this.packetQueue.size()));
                            }
                        }
                    }
                }
                if (event.getEventState() != EventState.POST || ((Boolean)this.matrixMoveOnly.get()).booleanValue() && !this.isMoving() || !StringsKt.equals((String)this.modeValue.get(), "matrix", true)) break block16;
                if (((Boolean)this.matrixNoCheck.get()).booleanValue()) break block17;
                Module module6 = Client.INSTANCE.getModuleManager().getModule(Fly.class);
                Intrinsics.checkNotNull(module6);
                if (module6.getState()) break block17;
                Module module7 = Client.INSTANCE.getModuleManager().getModule(Speed.class);
                Intrinsics.checkNotNull(module7);
                if (!module7.getState()) break block16;
            }
            boolean changed = false;
            if (((Boolean)this.matrixHotbarChange.get()).booleanValue()) {
                int n = 0;
                while (n < 9) {
                    int i;
                    if (MinecraftInstance.mc.field_71439_g.field_71071_by.field_70462_a[i = n++] != null || i == MinecraftInstance.mc.field_71439_g.field_71071_by.field_70461_c) continue;
                    PacketUtils.sendPacketNoEvent((Packet<INetHandlerPlayServer>)((Packet)new C09PacketHeldItemChange(i)));
                    changed = true;
                    this.debug("found empty slot " + i + ", switching");
                    break;
                }
            }
            PacketUtils.sendPacketNoEvent((Packet<INetHandlerPlayServer>)((Packet)new C03PacketPlayer.C06PacketPlayerPosLook(MinecraftInstance.mc.field_71439_g.field_70165_t, MinecraftInstance.mc.field_71439_g.field_70163_u, MinecraftInstance.mc.field_71439_g.field_70161_v, RotationUtils.serverRotation.getYaw(), RotationUtils.serverRotation.getPitch(), MinecraftInstance.mc.field_71439_g.field_70122_E)));
            MinecraftInstance.mc.func_147114_u().func_147297_a((Packet)new C08PacketPlayerBlockPlacement(new BlockPos(-1, -1, -1), -1, null, 0.0f, 0.0f, 0.0f));
            this.debug("sent placement");
            if (changed) {
                PacketUtils.sendPacketNoEvent((Packet<INetHandlerPlayServer>)((Packet)new C09PacketHeldItemChange(MinecraftInstance.mc.field_71439_g.field_71071_by.field_70461_c)));
                this.debug("switched back");
            }
        }
    }

    @EventTarget
    public final void onUpdate(@NotNull UpdateEvent event) {
        Intrinsics.checkNotNullParameter(event, "event");
        String string = ((String)this.modeValue.get()).toLowerCase();
        Intrinsics.checkNotNullExpressionValue(string, "this as java.lang.String).toLowerCase()");
        String string2 = string;
        if (Intrinsics.areEqual(string2, "oldverus")) {
            if (((Boolean)this.verusAntiFlyCheck.get()).booleanValue() && !this.shouldActive) {
                Module module2 = Client.INSTANCE.getModuleManager().get(Fly.class);
                Intrinsics.checkNotNull(module2);
                Module flyMod = module2;
                if (flyMod.getState()) {
                    flyMod.setState(false);
                    Client.INSTANCE.getHud().addNotification(new Notification("You can't fly before successful activation.", Notification.Type.WARNING));
                    this.debug("no fly allowed");
                }
            }
            if (this.msTimer.hasTimePassed(((Number)this.verusPurseDelayValue.get()).intValue()) && (!((Boolean)this.verusConditionCheck.get()).booleanValue() || this.shouldActive)) {
                this.msTimer.reset();
                if (!this.packetQueue.isEmpty()) {
                    PacketUtils.sendPacketNoEvent((Packet<INetHandlerPlayServer>)((Packet)this.packetQueue.poll()));
                    this.debug("release queue");
                } else {
                    this.debug("nothing to release");
                }
            }
            if (MinecraftInstance.mc.field_71439_g.field_70173_aa % 15 == 0 && this.shouldRun() && ((Boolean)this.verusFakeInput.get()).booleanValue()) {
                MinecraftInstance.mc.func_147114_u().func_147297_a((Packet)new C0CPacketInput(RangesKt.coerceAtMost(MinecraftInstance.mc.field_71439_g.field_70702_br, 0.98f), RangesKt.coerceAtMost(MinecraftInstance.mc.field_71439_g.field_70701_bs, 0.98f), MinecraftInstance.mc.field_71439_g.field_71158_b.field_78901_c, MinecraftInstance.mc.field_71439_g.field_71158_b.field_78899_d));
                this.debug("c0c");
            }
        } else if (Intrinsics.areEqual(string2, "pingspoof")) {
            if (this.msTimer.hasTimePassed(((Number)this.psfWorldDelay.get()).intValue()) && !this.shouldActive) {
                this.shouldActive = true;
                this.sendDelay = RandomUtils.nextInt(((Number)this.minpsf.get()).intValue(), ((Number)this.maxpsf.get()).intValue());
                if (this.queueBus.size() > 0) {
                    this.flush(false);
                }
                this.msTimer.reset();
                this.debug("activated. expected next delay: " + this.sendDelay + "ms");
            }
            if (this.shouldActive && this.msTimer.hasTimePassed(this.sendDelay) && !this.queueBus.isEmpty()) {
                this.flush(true);
                this.sendDelay = RandomUtils.nextInt(((Number)this.minpsf.get()).intValue(), ((Number)this.maxpsf.get()).intValue());
                this.msTimer.reset();
                this.debug("expected next delay: " + this.sendDelay + "ms");
            }
        }
    }

    public static final /* synthetic */ IntegerValue access$getMaxpsf$p(Disabler $this) {
        return $this.maxpsf;
    }

    public static final /* synthetic */ IntegerValue access$getMinpsf$p(Disabler $this) {
        return $this.minpsf;
    }

    public static final /* synthetic */ BoolValue access$getRotModify$p(Disabler $this) {
        return $this.rotModify;
    }

    public static final /* synthetic */ BoolValue access$getTestFeature$p(Disabler $this) {
        return $this.testFeature;
    }
}


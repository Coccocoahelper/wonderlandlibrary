/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  joptsimple.internal.Strings
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit;

import java.util.ArrayList;
import java.util.Collections;
import joptsimple.internal.Strings;
import net.ccbluex.liquidbounce.api.minecraft.network.play.server.ISPacketTabComplete;
import net.ccbluex.liquidbounce.event.EventTarget;
import net.ccbluex.liquidbounce.event.PacketEvent;
import net.ccbluex.liquidbounce.event.UpdateEvent;
import net.ccbluex.liquidbounce.features.module.Module;
import net.ccbluex.liquidbounce.features.module.ModuleCategory;
import net.ccbluex.liquidbounce.features.module.ModuleInfo;
import net.ccbluex.liquidbounce.utils.ClientUtils;
import net.ccbluex.liquidbounce.utils.timer.TickTimer;

@ModuleInfo(name="Plugins", description="Allows you to see which plugins the server is using.", category=ModuleCategory.EXPLOIT)
public class Plugins
extends Module {
    private final TickTimer tickTimer = new TickTimer();

    @EventTarget
    public void onPacket(PacketEvent packetEvent) {
        if (classProvider.isSPacketTabComplete(packetEvent.getPacket())) {
            String[] stringArray;
            ISPacketTabComplete iSPacketTabComplete = packetEvent.getPacket().asSPacketTabComplete();
            ArrayList<String> arrayList = new ArrayList<String>();
            for (String string : stringArray = iSPacketTabComplete.getCompletions()) {
                String string2;
                String[] stringArray2 = string.split(":");
                if (stringArray2.length <= 1 || arrayList.contains(string2 = stringArray2[0].replace("/", ""))) continue;
                arrayList.add(string2);
            }
            Collections.sort(arrayList);
            if (!arrayList.isEmpty()) {
                ClientUtils.displayChatMessage("\u00a7aPlugins \u00a77(\u00a78" + arrayList.size() + "\u00a77): \u00a7c" + Strings.join((String[])arrayList.toArray(new String[0]), (String)"\u00a77, \u00a7c"));
            } else {
                ClientUtils.displayChatMessage("\u00a7cNo plugins found.");
            }
            this.setState(false);
            this.tickTimer.reset();
        }
    }

    @Override
    public void onEnable() {
        if (mc.getThePlayer() == null) {
            return;
        }
        mc.getNetHandler().addToSendQueue(classProvider.createCPacketTabComplete("/"));
        this.tickTimer.reset();
    }

    @EventTarget
    public void onUpdate(UpdateEvent updateEvent) {
        this.tickTimer.update();
        if (this.tickTimer.hasTimePassed(20)) {
            ClientUtils.displayChatMessage("\u00a7cPlugins check timed out...");
            this.tickTimer.reset();
            this.setState(false);
        }
    }
}


/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  kotlin.Metadata
 *  kotlin.TypeCastException
 *  kotlin.jvm.internal.Intrinsics
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit;

import kotlin.Metadata;
import kotlin.TypeCastException;
import kotlin.jvm.internal.Intrinsics;
import net.ccbluex.liquidbounce.api.minecraft.client.entity.IEntityPlayerSP;
import net.ccbluex.liquidbounce.api.minecraft.client.network.IINetHandlerPlayClient;
import net.ccbluex.liquidbounce.features.module.Module;
import net.ccbluex.liquidbounce.features.module.ModuleCategory;
import net.ccbluex.liquidbounce.features.module.ModuleInfo;
import net.ccbluex.liquidbounce.utils.MinecraftInstance;
import net.ccbluex.liquidbounce.value.FloatValue;
import net.ccbluex.liquidbounce.value.ListValue;

@ModuleInfo(name="Clip", description="Allows you to clip through blocks.", category=ModuleCategory.EXPLOIT, canEnable=false)
@Metadata(mv={1, 1, 16}, bv={1, 0, 3}, k=1, d1={"\u0000 \n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u0002\n\u0000\b\u0007\u0018\u00002\u00020\u0001B\u0005\u00a2\u0006\u0002\u0010\u0002J\b\u0010\b\u001a\u00020\tH\u0016R\u000e\u0010\u0003\u001a\u00020\u0004X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0005\u001a\u00020\u0006X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0007\u001a\u00020\u0004X\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006\n"}, d2={"Lnet/ccbluex/liquidbounce/features/module/modules/exploit/Clip;", "Lnet/ccbluex/liquidbounce/features/module/Module;", "()V", "horizontalValue", "Lnet/ccbluex/liquidbounce/value/FloatValue;", "modeValue", "Lnet/ccbluex/liquidbounce/value/ListValue;", "verticalValue", "onEnable", "", "LiKingSense"})
public final class Clip
extends Module {
    public final ListValue modeValue = new ListValue("Mode", new String[]{"Teleport", "Flag"}, "Teleport");
    public final FloatValue horizontalValue = new FloatValue("Horizontal", 0.0f, -10.0f, 10.0f);
    public final FloatValue verticalValue = new FloatValue("Vertical", 5.0f, -10.0f, 10.0f);

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    @Override
    public void onEnable() {
        String string;
        IEntityPlayerSP iEntityPlayerSP = MinecraftInstance.mc.getThePlayer();
        if (iEntityPlayerSP == null) {
            return;
        }
        IEntityPlayerSP thePlayer = iEntityPlayerSP;
        double yaw = Math.toRadians(thePlayer.getRotationYaw());
        double x = -Math.sin(yaw) * ((Number)this.horizontalValue.get()).doubleValue();
        double z = Math.cos(yaw) * ((Number)this.horizontalValue.get()).doubleValue();
        String string2 = string = (String)this.modeValue.get();
        if (string2 == null) {
            throw new TypeCastException("null cannot be cast to non-null type java.lang.String");
        }
        String string3 = string2.toLowerCase();
        Intrinsics.checkExpressionValueIsNotNull((Object)string3, (String)"(this as java.lang.String).toLowerCase()");
        string = string3;
        switch (string.hashCode()) {
            case 3145580: {
                if (!string.equals("flag")) return;
                break;
            }
            case -1360201941: {
                if (!string.equals("teleport")) return;
                thePlayer.setPosition(thePlayer.getPosX() + x, thePlayer.getPosY() + ((Number)this.verticalValue.get()).doubleValue(), thePlayer.getPosZ() + z);
                return;
            }
        }
        IINetHandlerPlayClient netHandler = MinecraftInstance.mc.getNetHandler();
        netHandler.addToSendQueue(MinecraftInstance.classProvider.createCPacketPlayerPosition(thePlayer.getPosX(), thePlayer.getPosY(), thePlayer.getPosZ(), true));
        netHandler.addToSendQueue(MinecraftInstance.classProvider.createCPacketPlayerPosition(0.5, 0.0, 0.5, true));
        netHandler.addToSendQueue(MinecraftInstance.classProvider.createCPacketPlayerPosition(thePlayer.getPosX(), thePlayer.getPosY(), thePlayer.getPosZ(), true));
        netHandler.addToSendQueue(MinecraftInstance.classProvider.createCPacketPlayerPosition(thePlayer.getPosX() + x, thePlayer.getPosY() + ((Number)this.verticalValue.get()).doubleValue(), thePlayer.getPosZ() + z, true));
        netHandler.addToSendQueue(MinecraftInstance.classProvider.createCPacketPlayerPosition(0.5, 0.0, 0.5, true));
        netHandler.addToSendQueue(MinecraftInstance.classProvider.createCPacketPlayerPosition(thePlayer.getPosX() + 0.5, thePlayer.getPosY(), thePlayer.getPosZ() + 0.5, true));
        double d = thePlayer.getPosX();
        IEntityPlayerSP iEntityPlayerSP2 = thePlayer;
        double d2 = Math.sin(yaw);
        double d3 = d + -d2 * 0.04;
        double d4 = thePlayer.getPosZ();
        d2 = thePlayer.getPosY();
        d = d3;
        double d5 = Math.cos(yaw);
        iEntityPlayerSP2.setPosition(d, d2, d4 + d5 * 0.04);
        return;
    }
}


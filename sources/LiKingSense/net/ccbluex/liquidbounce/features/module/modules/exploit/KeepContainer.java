/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  kotlin.Metadata
 *  kotlin.TypeCastException
 *  kotlin.jvm.internal.Intrinsics
 *  org.jetbrains.annotations.NotNull
 *  org.lwjgl.input.Keyboard
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit;

import kotlin.Metadata;
import kotlin.TypeCastException;
import kotlin.jvm.internal.Intrinsics;
import net.ccbluex.liquidbounce.api.minecraft.client.gui.IGuiScreen;
import net.ccbluex.liquidbounce.api.minecraft.client.gui.inventory.IGuiContainer;
import net.ccbluex.liquidbounce.api.minecraft.network.play.client.ISPacketCloseWindow;
import net.ccbluex.liquidbounce.event.EventTarget;
import net.ccbluex.liquidbounce.event.KeyEvent;
import net.ccbluex.liquidbounce.event.PacketEvent;
import net.ccbluex.liquidbounce.event.ScreenEvent;
import net.ccbluex.liquidbounce.features.module.Module;
import net.ccbluex.liquidbounce.features.module.ModuleCategory;
import net.ccbluex.liquidbounce.features.module.ModuleInfo;
import net.ccbluex.liquidbounce.utils.MinecraftInstance;
import net.ccbluex.liquidbounce.value.TextValue;
import org.jetbrains.annotations.NotNull;
import org.lwjgl.input.Keyboard;

@ModuleInfo(name="KeepContainer", description="Allows you to open a formerly closed inventory container everywhere. (Press INSERT Key to open)", category=ModuleCategory.EXPLOIT)
@Metadata(mv={1, 1, 16}, bv={1, 0, 3}, k=1, d1={"\u00002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\b\u0007\u0018\u00002\u00020\u0001B\u0005\u00a2\u0006\u0002\u0010\u0002J\b\u0010\u0007\u001a\u00020\bH\u0016J\u0010\u0010\t\u001a\u00020\b2\u0006\u0010\n\u001a\u00020\u000bH\u0007J\u0010\u0010\f\u001a\u00020\b2\u0006\u0010\n\u001a\u00020\rH\u0007J\u0010\u0010\u000e\u001a\u00020\b2\u0006\u0010\n\u001a\u00020\u000fH\u0007R\u0010\u0010\u0003\u001a\u0004\u0018\u00010\u0004X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0005\u001a\u00020\u0006X\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006\u0010"}, d2={"Lnet/ccbluex/liquidbounce/features/module/modules/exploit/KeepContainer;", "Lnet/ccbluex/liquidbounce/features/module/Module;", "()V", "container", "Lnet/ccbluex/liquidbounce/api/minecraft/client/gui/inventory/IGuiContainer;", "keyName", "Lnet/ccbluex/liquidbounce/value/TextValue;", "onDisable", "", "onGui", "event", "Lnet/ccbluex/liquidbounce/event/ScreenEvent;", "onKey", "Lnet/ccbluex/liquidbounce/event/KeyEvent;", "onPacket", "Lnet/ccbluex/liquidbounce/event/PacketEvent;", "LiKingSense"})
public final class KeepContainer
extends Module {
    public final TextValue keyName = new TextValue("KeyName", "m");
    public IGuiContainer container;

    @Override
    public void onDisable() {
        if (this.container != null) {
            MinecraftInstance.mc.getNetHandler().addToSendQueue(MinecraftInstance.classProvider.createCPacketCloseWindow(this.container.getInventorySlots().getWindowId()));
        }
        this.container = null;
    }

    @EventTarget
    public final void onGui(@NotNull ScreenEvent event) {
        Intrinsics.checkParameterIsNotNull((Object)event, (String)"event");
        IGuiScreen guiScreen = event.getGuiScreen();
        if (MinecraftInstance.classProvider.isGuiContainer(guiScreen) && !MinecraftInstance.classProvider.isGuiInventory(guiScreen)) {
            this.container = guiScreen.asGuiContainer();
        }
    }

    @EventTarget
    public final void onKey(@NotNull KeyEvent event) {
        Intrinsics.checkParameterIsNotNull((Object)event, (String)"event");
        String string = (String)this.keyName.get();
        int n = event.getKey();
        String string2 = string;
        if (string2 == null) {
            throw new TypeCastException("null cannot be cast to non-null type java.lang.String");
        }
        String string3 = string2.toUpperCase();
        Intrinsics.checkExpressionValueIsNotNull((Object)string3, (String)"(this as java.lang.String).toUpperCase()");
        String string4 = string3;
        if (n == Keyboard.getKeyIndex((String)string4)) {
            if (this.container == null) {
                return;
            }
            MinecraftInstance.mc.displayGuiScreen(this.container);
        }
    }

    @EventTarget
    public final void onPacket(@NotNull PacketEvent event) {
        Intrinsics.checkParameterIsNotNull((Object)event, (String)"event");
        if (MinecraftInstance.classProvider.isCPacketCloseWindow(event.getPacket())) {
            event.cancelEvent();
        } else if (MinecraftInstance.classProvider.isSPacketCloseWindow(event.getPacket())) {
            ISPacketCloseWindow packetCloseWindow = event.getPacket().asSPacketCloseWindow();
            if (this.container != null && this.container.getInventorySlots() != null && packetCloseWindow.getWindowId() == this.container.getInventorySlots().getWindowId()) {
                this.container = null;
            }
        }
    }
}


package dev.monsoon.module.implementation.exploit;

import java.util.ArrayList;
import java.util.concurrent.CopyOnWriteArrayList;

import javax.vecmath.Vector3f;

import net.minecraft.client.Minecraft;
import net.minecraft.network.play.client.C02PacketUseEntity;
import org.lwjgl.input.Keyboard;

import dev.monsoon.event.Event;
import dev.monsoon.event.listeners.EventPacket;
import dev.monsoon.event.listeners.EventRender3D;
import dev.monsoon.event.listeners.EventUpdate;
import dev.monsoon.module.base.Module;
import dev.monsoon.util.render.RenderUtil;
import dev.monsoon.util.misc.Timer;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.util.BlockPos;
import dev.monsoon.module.enums.Category;

public class Blink extends Module {
	
	Timer timer = new Timer();

	private boolean blinking;
	
	private CopyOnWriteArrayList<Packet> savedPackets = new CopyOnWriteArrayList<Packet>();
	private Vector3f firstPosition;
	
	
	public Blink() {
		super("Blink", Keyboard.KEY_NONE, Category.EXPLOIT);
	}
	
	
	public void onEvent(Event e) {
		if(e instanceof EventPacket) {
			if(e.isOutgoing()) {
				Packet packet = ((EventPacket) e).getPacket();
				
				if(packet instanceof C03PacketPlayer && blinking) {
					savedPackets.add(packet);
					e.setCancelled(true);
				}
			}
        }
		if(e instanceof EventUpdate && e.isPre()) {
			this.setSuffix(savedPackets.size() + "");
			float x = (float)mc.thePlayer.posX - firstPosition.x;
			float y = (float)mc.thePlayer.posY - firstPosition.y;
			float z = (float)mc.thePlayer.posZ - firstPosition.z;
			
			
			timer.reset();
			if(timer.hasTimeElapsed(3000,false))
			{
	            Minecraft.getMinecraft().thePlayer.sendQueue.addToSendQueue
	            (
	            	new C03PacketPlayer.C06PacketPlayerPosLook
	            	(
	            		Minecraft.getMinecraft().thePlayer.posX,
	            		Minecraft.getMinecraft().thePlayer.posY,
	            		Minecraft.getMinecraft().thePlayer.posZ,
	            		Minecraft.getMinecraft().thePlayer.rotationYaw,
	            		Minecraft.getMinecraft().thePlayer.rotationPitch,
	            		Minecraft.getMinecraft().thePlayer.onGround
	            	)
	            );
				timer.reset();
			}
		}
		if(e instanceof EventRender3D) {
			if(mc.thePlayer != null) {
				  BlockPos pos = new BlockPos(firstPosition.x, firstPosition.y, firstPosition.z);
				  BlockPos pos2 = new BlockPos(firstPosition.x, firstPosition.y + 1.0D, firstPosition.z);
				  //RenderUtil.drawBoxFromBlockpos(pos, 1, 1, 1, 1);
				  //RenderUtil.drawBoxFromBlockpos(pos2, 1, 1, 1, 1);
			}
		 }
	}
	
	@Override
	public void onEnable() {
		blinking = true;
		//NotificationManager.show(new Notification(NotificationType.INFO, "Blink", "Now blinking.", 1));
		//Monsoon.sendMessage("enable blink");
		if(mc.thePlayer != null){
			firstPosition = new Vector3f((float)mc.thePlayer.posX, (float)mc.thePlayer.posY, (float)mc.thePlayer.posZ);
		}
	}
	
	@Override
	public void onDisable() {
		//NotificationManager.show(new Notification(NotificationType.INFO, "Blink", "No longer blinking.", 1));
		//Monsoon.sendMessage("disable blink");
		this.stopBlink();
	}

	public void startBasicBlink(Event e) {
		if(e instanceof EventPacket) {
			if (((EventPacket<?>) e).getPacket() instanceof C03PacketPlayer) {
				e.setCancelled(true);
			}
		}
	}

	public void stopBlink() {
		for(Packet packet : savedPackets){
			mc.thePlayer.sendQueue.addToSendQueue(packet);
		}
		savedPackets.clear();
		blinking = false;
	}
	
}

package net.ccbluex.liquidbounce.features.module.modules.exploit;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import kotlin.Metadata;
import kotlin.TypeCastException;
import kotlin.jvm.internal.Intrinsics;
import me.utils.PacketUtils;
import net.ccbluex.liquidbounce.api.minecraft.client.entity.IEntityPlayerSP;
import net.ccbluex.liquidbounce.api.minecraft.client.network.IINetHandlerPlayClient;
import net.ccbluex.liquidbounce.api.minecraft.network.IPacket;
import net.ccbluex.liquidbounce.api.minecraft.network.play.client.ICPacketEntityAction;
import net.ccbluex.liquidbounce.event.EventTarget;
import net.ccbluex.liquidbounce.event.PacketEvent;
import net.ccbluex.liquidbounce.event.UpdateEvent;
import net.ccbluex.liquidbounce.features.module.Module;
import net.ccbluex.liquidbounce.features.module.ModuleCategory;
import net.ccbluex.liquidbounce.features.module.ModuleInfo;
import net.ccbluex.liquidbounce.injection.backend.PacketImpl;
import net.ccbluex.liquidbounce.utils.MinecraftInstance;
import net.ccbluex.liquidbounce.utils.timer.MSTimer;
import net.ccbluex.liquidbounce.value.BoolValue;
import net.ccbluex.liquidbounce.value.ListValue;
import net.minecraft.network.Packet;
import net.minecraft.network.play.INetHandlerPlayServer;
import net.minecraft.network.play.client.CPacketConfirmTransaction;
import net.minecraft.network.play.client.CPacketEntityAction;
import net.minecraft.network.play.client.CPacketKeepAlive;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.network.play.server.SPacketPlayerPosLook;
import org.apache.commons.lang3.RandomUtils;
import org.jetbrains.annotations.NotNull;

@ModuleInfo(name="Disabler", description="Anti æ¬£æ¬£.", category=ModuleCategory.EXPLOIT)
@Metadata(mv={1, 1, 16}, bv={1, 0, 3}, k=1, d1={"\u0000\\\n\u0002\n\n\b\n\n\n\n\u0000\n\n\b\n\n\b\n\n\u0000\n\n\b\n\n\n\b\n\n\u0000\n\n\u0000\n\n\u0000\n\n\u0000\b\u000020BÂ¢J02 0!HJ\"02 0#HR00j\b0`XÂ‚Â¢\n\u0000R0\bXÂ‚Â¢\n\u0000R\t0\bXÂ‚Â¢\n\u0000R\n0\bXÂ‚Â¢\n\u0000R0\bXÂ‚Â¢\n\u0000R\f0\bXÂ‚Â¢\n\u0000R\r0\bXÂ‚Â¢\n\u0000R0\bXÂ‚Â¢\n\u0000R0Â¢\b\n\u0000\bR00j\b0`XÂ‚Â¢\n\u0000R0Â¢\b\n\u0000\bR*000j00`XÂ‚Â¢\n\u0000Â¨$"}, d2={"Lnet/ccbluex/liquidbounce/features/module/modules/exploit/LZQDisabler;", "Lnet/ccbluex/liquidbounce/features/module/Module;", "()V", "attackPackets", "Ljava/util/ArrayList;", "Lnet/minecraft/network/play/client/CPacketPlayer;", "Lkotlin/collections/ArrayList;", "hypStrafeValue", "Lnet/ccbluex/liquidbounce/value/BoolValue;", "hytBlinkTestValue", "hytCombatValue", "hytLagValue", "hytMoveValue", "hytScaffoldValue", "hytTimerValue", "modeValue", "Lnet/ccbluex/liquidbounce/value/ListValue;", "getModeValue", "()Lnet/ccbluex/liquidbounce/value/ListValue;", "movePackets", "Lnet/minecraft/network/play/client/CPacketConfirmTransaction;", "msTimer", "Lnet/ccbluex/liquidbounce/utils/timer/MSTimer;", "getMsTimer", "()Lnet/ccbluex/liquidbounce/utils/timer/MSTimer;", "timerPackets", "Ljava/util/HashMap;", "Lnet/minecraft/network/play/client/CPacketKeepAlive;", "", "Lkotlin/collections/HashMap;", "onPacket", "", "event", "Lnet/ccbluex/liquidbounce/event/PacketEvent;", "onUpdate", "Lnet/ccbluex/liquidbounce/event/UpdateEvent;", "Pride"})
public final class LZQDisabler
extends Module {
    @NotNull
    private final ListValue modeValue = new ListValue("Mode", new String[]{"HuaYuTing", "Hypixel"}, "HuaYuTing");
    private final BoolValue hypStrafeValue = new BoolValue("Hypixel-StrafeTest", true);
    private final BoolValue hytMoveValue = new BoolValue("HYT-Move", true);
    private final BoolValue hytTimerValue = new BoolValue("HYT-Timer", true);
    private final BoolValue hytScaffoldValue = new BoolValue("HYT-Scaffold", true);
    private final BoolValue hytCombatValue = new BoolValue("HYT-Combat", true);
    private final BoolValue hytBlinkTestValue = new BoolValue("HYT-BlinkTest", false);
    private final BoolValue hytLagValue = new BoolValue("HYT-S08Silent", false);
    private ArrayList<CPacketPlayer> attackPackets;
    private ArrayList<CPacketConfirmTransaction> movePackets;
    private HashMap<CPacketKeepAlive, Integer> timerPackets;
    @NotNull
    private final MSTimer msTimer;

    @NotNull
    public final ListValue getModeValue() {
        return this.modeValue;
    }

    @NotNull
    public final MSTimer getMsTimer() {
        return this.msTimer;
    }

    @EventTarget
    public final void onUpdate(@NotNull UpdateEvent event) {
        Iterator<Object> iterator;
        Intrinsics.checkParameterIsNotNull(event, "event");
        if (this.movePackets.size() >= 4) {
            iterator = this.movePackets.iterator();
            while (iterator.hasNext()) {
                CPacketConfirmTransaction cPacketConfirmTransaction;
                CPacketConfirmTransaction cPacketConfirmTransaction2 = cPacketConfirmTransaction = iterator.next();
                Intrinsics.checkExpressionValueIsNotNull(cPacketConfirmTransaction2, "packet");
                PacketUtils.sendPacketNoEvent((Packet<INetHandlerPlayServer>)((Packet)cPacketConfirmTransaction2));
            }
            this.movePackets.clear();
        }
        Map map = this.timerPackets;
        boolean bl = false;
        for (Map.Entry entry : map.entrySet()) {
            if (!this.msTimer.hasTimePassed(((Number)entry.getValue()).intValue())) continue;
            PacketUtils.sendPacketNoEvent((Packet<INetHandlerPlayServer>)((Packet)entry.getKey()));
            this.timerPackets.remove(entry.getKey());
            this.msTimer.reset();
        }
        if (this.attackPackets.size() >= 5) {
            iterator = this.attackPackets.iterator();
            while (iterator.hasNext()) {
                CPacketPlayer cPacketPlayer;
                CPacketPlayer cPacketPlayer2 = cPacketPlayer = (CPacketPlayer)iterator.next();
                Intrinsics.checkExpressionValueIsNotNull(cPacketPlayer2, "packet");
                PacketUtils.sendPacketNoEvent((Packet<INetHandlerPlayServer>)((Packet)cPacketPlayer2));
            }
            this.attackPackets.clear();
        }
    }

    @EventTarget
    public final void onPacket(@NotNull PacketEvent event) {
        block30: {
            block29: {
                Intrinsics.checkParameterIsNotNull(event, "event");
                IPacket $this$unwrap$iv = event.getPacket();
                boolean $i$f$unwrap = false;
                Object packet = ((PacketImpl)$this$unwrap$iv).getWrapped();
                if (packet instanceof CPacketConfirmTransaction) {
                    if (Intrinsics.areEqual((String)this.modeValue.get(), "HuaYuTing") && ((Boolean)this.hytMoveValue.get()).booleanValue() && !PacketUtils.handleSendPacket(packet)) {
                        this.movePackets.add((CPacketConfirmTransaction)packet);
                    }
                    if (Intrinsics.areEqual((String)this.modeValue.get(), "Hypixel") && ((Boolean)this.hypStrafeValue.get()).booleanValue() && !PacketUtils.handleSendPacket(packet)) {
                        this.movePackets.add((CPacketConfirmTransaction)packet);
                    }
                }
                if (packet instanceof CPacketKeepAlive && Intrinsics.areEqual((String)this.modeValue.get(), "HuaYuTing") && ((Boolean)this.hytTimerValue.get()).booleanValue() && !PacketUtils.handleSendPacket(packet)) {
                    ((Map)this.timerPackets).put(packet, RandomUtils.nextInt(400, 500));
                }
                if (packet instanceof SPacketPlayerPosLook && Intrinsics.areEqual((String)this.modeValue.get(), "HuaYuTing") && ((Boolean)this.hytLagValue.get()).booleanValue()) {
                    IINetHandlerPlayClient iINetHandlerPlayClient = MinecraftInstance.mc.getNetHandler();
                    double d = ((SPacketPlayerPosLook)packet).getX();
                    double d2 = ((SPacketPlayerPosLook)packet).getY();
                    double d3 = ((SPacketPlayerPosLook)packet).getZ();
                    float f = ((SPacketPlayerPosLook)packet).yaw;
                    float f2 = ((SPacketPlayerPosLook)packet).pitch;
                    IEntityPlayerSP iEntityPlayerSP = MinecraftInstance.mc.getThePlayer();
                    if (iEntityPlayerSP == null) {
                        Intrinsics.throwNpe();
                    }
                    iINetHandlerPlayClient.addToSendQueue(MinecraftInstance.classProvider.createCPacketPlayerPosLook(d, d2, d3, f, f2, iEntityPlayerSP.getOnGround()));
                    event.cancelEvent();
                }
                if (packet instanceof CPacketPlayer.Position && Intrinsics.areEqual((String)this.modeValue.get(), "HuaYuTing") && ((Boolean)this.hytBlinkTestValue.get()).booleanValue()) {
                    IINetHandlerPlayClient iINetHandlerPlayClient = MinecraftInstance.mc.getNetHandler();
                    IEntityPlayerSP iEntityPlayerSP = MinecraftInstance.mc.getThePlayer();
                    if (iEntityPlayerSP == null) {
                        Intrinsics.throwNpe();
                    }
                    iINetHandlerPlayClient.addToSendQueue(MinecraftInstance.classProvider.createCPacketEntityAction(iEntityPlayerSP, ICPacketEntityAction.WAction.START_SNEAKING));
                    IINetHandlerPlayClient iINetHandlerPlayClient2 = MinecraftInstance.mc.getNetHandler();
                    double d = ((CPacketPlayer.Position)packet).field_149479_a;
                    double d4 = ((CPacketPlayer.Position)packet).field_149477_b;
                    double d5 = ((CPacketPlayer.Position)packet).field_149478_c;
                    IEntityPlayerSP iEntityPlayerSP2 = MinecraftInstance.mc.getThePlayer();
                    if (iEntityPlayerSP2 == null) {
                        Intrinsics.throwNpe();
                    }
                    float f = iEntityPlayerSP2.getRotationYaw();
                    IEntityPlayerSP iEntityPlayerSP3 = MinecraftInstance.mc.getThePlayer();
                    if (iEntityPlayerSP3 == null) {
                        Intrinsics.throwNpe();
                    }
                    float f3 = iEntityPlayerSP3.getRotationPitch();
                    IEntityPlayerSP iEntityPlayerSP4 = MinecraftInstance.mc.getThePlayer();
                    if (iEntityPlayerSP4 == null) {
                        Intrinsics.throwNpe();
                    }
                    iINetHandlerPlayClient2.addToSendQueue(MinecraftInstance.classProvider.createCPacketPlayerPosLook(d, d4, d5, f, f3, iEntityPlayerSP4.getOnGround()));
                    IINetHandlerPlayClient iINetHandlerPlayClient3 = MinecraftInstance.mc.getNetHandler();
                    double d6 = ((CPacketPlayer.Position)packet).field_149479_a;
                    double d7 = ((CPacketPlayer.Position)packet).field_149477_b + 1.0E7;
                    double d8 = ((CPacketPlayer.Position)packet).field_149478_c;
                    IEntityPlayerSP iEntityPlayerSP5 = MinecraftInstance.mc.getThePlayer();
                    if (iEntityPlayerSP5 == null) {
                        Intrinsics.throwNpe();
                    }
                    float f4 = iEntityPlayerSP5.getRotationYaw();
                    IEntityPlayerSP iEntityPlayerSP6 = MinecraftInstance.mc.getThePlayer();
                    if (iEntityPlayerSP6 == null) {
                        Intrinsics.throwNpe();
                    }
                    float f5 = iEntityPlayerSP6.getRotationPitch();
                    IEntityPlayerSP iEntityPlayerSP7 = MinecraftInstance.mc.getThePlayer();
                    if (iEntityPlayerSP7 == null) {
                        Intrinsics.throwNpe();
                    }
                    iINetHandlerPlayClient3.addToSendQueue(MinecraftInstance.classProvider.createCPacketPlayerPosLook(d6, d7, d8, f4, f5, iEntityPlayerSP7.getOnGround()));
                    IINetHandlerPlayClient iINetHandlerPlayClient4 = MinecraftInstance.mc.getNetHandler();
                    double d9 = ((CPacketPlayer.Position)packet).field_149479_a;
                    double d10 = ((CPacketPlayer.Position)packet).field_149477_b - 1.0E8;
                    double d11 = ((CPacketPlayer.Position)packet).field_149478_c;
                    IEntityPlayerSP iEntityPlayerSP8 = MinecraftInstance.mc.getThePlayer();
                    if (iEntityPlayerSP8 == null) {
                        Intrinsics.throwNpe();
                    }
                    float f6 = iEntityPlayerSP8.getRotationYaw();
                    IEntityPlayerSP iEntityPlayerSP9 = MinecraftInstance.mc.getThePlayer();
                    if (iEntityPlayerSP9 == null) {
                        Intrinsics.throwNpe();
                    }
                    float f7 = iEntityPlayerSP9.getRotationPitch();
                    IEntityPlayerSP iEntityPlayerSP10 = MinecraftInstance.mc.getThePlayer();
                    if (iEntityPlayerSP10 == null) {
                        Intrinsics.throwNpe();
                    }
                    iINetHandlerPlayClient4.addToSendQueue(MinecraftInstance.classProvider.createCPacketPlayerPosLook(d9, d10, d11, f6, f7, iEntityPlayerSP10.getOnGround()));
                    IINetHandlerPlayClient iINetHandlerPlayClient5 = MinecraftInstance.mc.getNetHandler();
                    double d12 = ((CPacketPlayer.Position)packet).field_149479_a;
                    double d13 = ((CPacketPlayer.Position)packet).field_149477_b - 1.0E-6;
                    double d14 = ((CPacketPlayer.Position)packet).field_149478_c;
                    IEntityPlayerSP iEntityPlayerSP11 = MinecraftInstance.mc.getThePlayer();
                    if (iEntityPlayerSP11 == null) {
                        Intrinsics.throwNpe();
                    }
                    float f8 = iEntityPlayerSP11.getRotationYaw();
                    IEntityPlayerSP iEntityPlayerSP12 = MinecraftInstance.mc.getThePlayer();
                    if (iEntityPlayerSP12 == null) {
                        Intrinsics.throwNpe();
                    }
                    float f9 = iEntityPlayerSP12.getRotationPitch();
                    IEntityPlayerSP iEntityPlayerSP13 = MinecraftInstance.mc.getThePlayer();
                    if (iEntityPlayerSP13 == null) {
                        Intrinsics.throwNpe();
                    }
                    iINetHandlerPlayClient5.addToSendQueue(MinecraftInstance.classProvider.createCPacketPlayerPosLook(d12, d13, d14, f8, f9, iEntityPlayerSP13.getOnGround()));
                    IINetHandlerPlayClient iINetHandlerPlayClient6 = MinecraftInstance.mc.getNetHandler();
                    double d15 = ((CPacketPlayer.Position)packet).field_149479_a;
                    double d16 = ((CPacketPlayer.Position)packet).field_149477_b;
                    double d17 = ((CPacketPlayer.Position)packet).field_149478_c;
                    IEntityPlayerSP iEntityPlayerSP14 = MinecraftInstance.mc.getThePlayer();
                    if (iEntityPlayerSP14 == null) {
                        Intrinsics.throwNpe();
                    }
                    float f10 = iEntityPlayerSP14.getRotationYaw();
                    IEntityPlayerSP iEntityPlayerSP15 = MinecraftInstance.mc.getThePlayer();
                    if (iEntityPlayerSP15 == null) {
                        Intrinsics.throwNpe();
                    }
                    float f11 = iEntityPlayerSP15.getRotationPitch();
                    IEntityPlayerSP iEntityPlayerSP16 = MinecraftInstance.mc.getThePlayer();
                    if (iEntityPlayerSP16 == null) {
                        Intrinsics.throwNpe();
                    }
                    iINetHandlerPlayClient6.addToSendQueue(MinecraftInstance.classProvider.createCPacketPlayerPosLook(d15, d16, d17, f10, f11, iEntityPlayerSP16.getOnGround()));
                    IINetHandlerPlayClient iINetHandlerPlayClient7 = MinecraftInstance.mc.getNetHandler();
                    IEntityPlayerSP iEntityPlayerSP17 = MinecraftInstance.mc.getThePlayer();
                    if (iEntityPlayerSP17 == null) {
                        Intrinsics.throwNpe();
                    }
                    iINetHandlerPlayClient7.addToSendQueue(MinecraftInstance.classProvider.createCPacketEntityAction(iEntityPlayerSP17, ICPacketEntityAction.WAction.STOP_SNEAKING));
                }
                if (packet instanceof CPacketPlayer && !PacketUtils.handleSendPacket(packet) && Intrinsics.areEqual((String)this.modeValue.get(), "HuaYuTing") && ((Boolean)this.hytCombatValue.get()).booleanValue()) {
                    this.attackPackets.add((CPacketPlayer)packet);
                }
                if (packet instanceof CPacketEntityAction && ((CPacketEntityAction)packet).getAction() == CPacketEntityAction.Action.START_SPRINTING) break block29;
                Object t = packet;
                if (t == null) {
                    throw new TypeCastException("null cannot be cast to non-null type net.minecraft.network.play.client.CPacketEntityAction");
                }
                if (((CPacketEntityAction)t).getAction() != CPacketEntityAction.Action.STOP_SPRINTING) break block30;
            }
            event.cancelEvent();
        }
    }

    public LZQDisabler() {
        LZQDisabler lZQDisabler = this;
        boolean bl = false;
        ArrayList arrayList = new ArrayList();
        lZQDisabler.attackPackets = arrayList;
        lZQDisabler = this;
        bl = false;
        arrayList = new ArrayList();
        lZQDisabler.movePackets = arrayList;
        this.timerPackets = new HashMap();
        this.msTimer = new MSTimer();
    }
}

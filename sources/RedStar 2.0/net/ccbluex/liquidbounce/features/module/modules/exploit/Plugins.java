package net.ccbluex.liquidbounce.features.module.modules.exploit;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import joptsimple.internal.Strings;
import kotlin.Metadata;
import kotlin.jvm.internal.Intrinsics;
import kotlin.text.StringsKt;
import net.ccbluex.liquidbounce.api.minecraft.network.play.server.ISPacketTabComplete;
import net.ccbluex.liquidbounce.event.EventTarget;
import net.ccbluex.liquidbounce.event.PacketEvent;
import net.ccbluex.liquidbounce.event.UpdateEvent;
import net.ccbluex.liquidbounce.features.module.Module;
import net.ccbluex.liquidbounce.features.module.ModuleCategory;
import net.ccbluex.liquidbounce.features.module.ModuleInfo;
import net.ccbluex.liquidbounce.utils.ClientUtils;
import net.ccbluex.liquidbounce.utils.MinecraftInstance;
import net.ccbluex.liquidbounce.utils.timer.TickTimer;
import org.jetbrains.annotations.NotNull;

@ModuleInfo(name="Plugins", description="Allows you to see which plugins the server is using.", category=ModuleCategory.EXPLOIT)
@Metadata(mv={1, 1, 16}, bv={1, 0, 3}, k=1, d1={"\u0000&\n\n\n\b\n\n\u0000\n\n\b\n\n\u0000\n\n\u0000\b\u000020BÂ¢J\b0HJ02\b0\tHJ\n02\b0HR0XÂ‚Â¢\n\u0000Â¨\f"}, d2={"Lnet/ccbluex/liquidbounce/features/module/modules/exploit/Plugins;", "Lnet/ccbluex/liquidbounce/features/module/Module;", "()V", "tickTimer", "Lnet/ccbluex/liquidbounce/utils/timer/TickTimer;", "onEnable", "", "onPacket", "event", "Lnet/ccbluex/liquidbounce/event/PacketEvent;", "onUpdate", "Lnet/ccbluex/liquidbounce/event/UpdateEvent;", "Pride"})
public final class Plugins
extends Module {
    private final TickTimer tickTimer = new TickTimer();

    @Override
    public void onEnable() {
        if (MinecraftInstance.mc.getThePlayer() == null) {
            return;
        }
        MinecraftInstance.mc.getNetHandler().addToSendQueue(MinecraftInstance.classProvider.createCPacketTabComplete("/"));
        this.tickTimer.reset();
    }

    @EventTarget
    public final void onUpdate(@NotNull UpdateEvent event) {
        Intrinsics.checkParameterIsNotNull(event, "event");
        this.tickTimer.update();
        if (this.tickTimer.hasTimePassed(20)) {
            ClientUtils.displayChatMessage("Â§cPlugins check timed out...");
            this.tickTimer.reset();
            this.setState(false);
        }
    }

    @EventTarget
    public final void onPacket(@NotNull PacketEvent event) {
        Intrinsics.checkParameterIsNotNull(event, "event");
        if (MinecraftInstance.classProvider.isSPacketTabComplete(event.getPacket())) {
            String[] commands;
            ISPacketTabComplete s3APacketTabComplete = event.getPacket().asSPacketTabComplete();
            ArrayList<String> plugins = new ArrayList<String>();
            for (String command1 : commands = s3APacketTabComplete.getCompletions()) {
                String pluginName;
                List command = StringsKt.split$default((CharSequence)command1, new String[]{":"}, false, 0, 6, null);
                if (command.size() <= 1 || plugins.contains(pluginName = StringsKt.replace$default((String)command.get(0), "/", "", false, 4, null))) continue;
                plugins.add(pluginName);
            }
            Collections.sort((List)plugins);
            if (!plugins.isEmpty()) {
                ClientUtils.displayChatMessage("Â§aPlugins Â§7(Â§8" + plugins.size() + "Â§7): Â§c" + Strings.join((String[])plugins.toArray(new String[0]), (String)"Â§7, Â§c"));
            } else {
                ClientUtils.displayChatMessage("Â§cNo plugins found.");
            }
            this.setState(false);
            this.tickTimer.reset();
        }
    }
}

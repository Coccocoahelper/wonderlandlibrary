package net.ccbluex.liquidbounce.features.module.modules.exploit;

import kotlin.Metadata;
import kotlin.jvm.internal.Intrinsics;
import kotlin.ranges.RangesKt;
import net.ccbluex.liquidbounce.api.minecraft.network.play.client.ICPacketPlayer;
import net.ccbluex.liquidbounce.event.EventTarget;
import net.ccbluex.liquidbounce.event.PacketEvent;
import net.ccbluex.liquidbounce.features.module.Module;
import net.ccbluex.liquidbounce.features.module.ModuleCategory;
import net.ccbluex.liquidbounce.features.module.ModuleInfo;
import net.ccbluex.liquidbounce.utils.MinecraftInstance;
import net.ccbluex.liquidbounce.value.BoolValue;
import org.jetbrains.annotations.NotNull;

@ModuleInfo(name="NoPitchLimit", description="Allows you to rotate your head indefinitely in every direction..", category=ModuleCategory.EXPLOIT)
@Metadata(mv={1, 1, 16}, bv={1, 0, 3}, k=1, d1={"\u0000\n\n\n\b\n\n\u0000\n\n\u0000\n\n\u0000\b\u000020BÂ¢J020\bHR0XÂ‚Â¢\n\u0000Â¨\t"}, d2={"Lnet/ccbluex/liquidbounce/features/module/modules/exploit/NoPitchLimit;", "Lnet/ccbluex/liquidbounce/features/module/Module;", "()V", "serverSideValue", "Lnet/ccbluex/liquidbounce/value/BoolValue;", "onPacket", "", "e", "Lnet/ccbluex/liquidbounce/event/PacketEvent;", "Pride"})
public final class NoPitchLimit
extends Module {
    private final BoolValue serverSideValue = new BoolValue("ServerSide", true);

    @EventTarget
    public final void onPacket(@NotNull PacketEvent e) {
        Intrinsics.checkParameterIsNotNull(e, "e");
        if (((Boolean)this.serverSideValue.get()).booleanValue()) {
            return;
        }
        if (MinecraftInstance.classProvider.isCPacketPlayer(e.getPacket())) {
            ICPacketPlayer packet = e.getPacket().asCPacketPlayer();
            packet.setPitch(RangesKt.coerceAtMost(packet.getPitch(), 90.0f));
            packet.setPitch(RangesKt.coerceAtLeast(packet.getPitch(), -90.0f));
        }
    }
}

package dev.monsoon.module.implementation.exploit;


import dev.monsoon.Monsoon;
import dev.monsoon.event.Event;
import dev.monsoon.event.listeners.EventMotion;
import dev.monsoon.event.listeners.EventMove;
import dev.monsoon.event.listeners.EventPacket;
import dev.monsoon.event.listeners.EventUpdate;
import dev.monsoon.module.base.Module;
import dev.monsoon.module.implementation.exploit.disabler.PacketSleepThread;
import dev.monsoon.module.setting.impl.ModeSetting;
import dev.monsoon.notification.Notification;
import dev.monsoon.notification.NotificationManager;
import dev.monsoon.notification.NotificationType;
import dev.monsoon.util.entity.DamageUtil;
import dev.monsoon.util.misc.MathUtils;
import dev.monsoon.util.misc.PacketUtil;
import dev.monsoon.util.misc.ServerUtil;
import dev.monsoon.util.misc.Timer;
import net.minecraft.client.Minecraft;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C00PacketKeepAlive;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C0FPacketConfirmTransaction;
import org.apache.commons.lang3.RandomUtils;
import org.lwjgl.input.Keyboard;
import dev.monsoon.module.enums.Category;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;

public class Disabler extends Module {

    public ModeSetting mode = new ModeSetting("Mode", this,"Self lagback", "BridgerLand", "Self lagback", "Verus", "Z3R0 epic not fake redesky disabler!!!1111", "AntiAC");

    public Disabler() {
        super("Disabler", Keyboard.KEY_NONE, Category.EXPLOIT);
        this.addSettings(mode);
    }

    public Timer timer = new Timer(), bedlesstimer = new Timer();
    Queue<Packet> gamer = new LinkedList<>();


    @Override
    public void onEnable() {
        timer.reset();
        bedlesstimer.reset();
        if(ServerUtil.isHypixel()) {
            NotificationManager.show(new Notification(NotificationType.INFO, "Disabler", "Disablers will not work on hypixel and can possibly ban.", 2));
            this.toggle();
        }
        if(mode.is("AntiAC")) {
            NotificationManager.show(new Notification(NotificationType.INFO, "Disabler", "Wait 2.5 seconds", 1));
        }
        if(mode.is("BridgerLand")) {
            NotificationManager.show(new Notification(NotificationType.INFO, "Disabler", "bridger.land's anticheat is now disabled.", 1));
            //DamageUtil.damageVerus();
        }
    }

    @Override
    public void onDisable() {
        mc.timer.timerSpeed = 1.0f;
    }


    public void onEvent(Event e) {
        int oldId = 0;
        if(e instanceof EventPacket && e.isIncoming()) {

        }
        if(e instanceof EventPacket && e.isOutgoing()) {
            if(mode.is("Z3R0 epic not fake redesky disabler!!!1111")) {
                Packet packet = ((EventPacket<?>) e).getPacket();

                if (packet instanceof C03PacketPlayer)
                    e.setCancelled(true);
            }
            if(mode.is("BridgerLand")) {
                if (((EventPacket<?>) e).getPacket() instanceof C0FPacketConfirmTransaction) {

                    if (mc.thePlayer.ticksExisted % 6 == 0) {
                        PacketUtil.sendPacketNoEvent(gamer.poll());
                    }

                    gamer.add(((EventPacket<?>) e).getPacket());
                    e.setCancelled(true);

                }
            }
            if(mode.is("Verus")) {
                Packet packet = ((EventPacket<?>) e).getPacket();

                if (packet instanceof C0FPacketConfirmTransaction) {
                    C0FPacketConfirmTransaction packetConfirmTransaction = (C0FPacketConfirmTransaction) ((EventPacket<?>) e).getPacket();
                    new PacketSleepThread(packetConfirmTransaction, RandomUtils.nextInt(6000, 12000)).start();
                    e.setCancelled(true);
                }
            }
        }
        if(e instanceof EventUpdate) {
            this.setSuffix(mode.getMode());
            if(ServerUtil.isHypixel()) {
                NotificationManager.show(new Notification(NotificationType.INFO, "Disabler", "Disablers will not work on hypixel and can possibly ban.", 2));
                this.toggle();
            }

            if(mode.is("BridgerLand")) {
                if(bedlesstimer.hasTimeElapsed(3000, true)) {
                    //mc.timer.timerSpeed = 0.1f;
                    mc.thePlayer.setPosition(mc.thePlayer.posX, -11, mc.thePlayer.posZ);
                    PacketUtil.sendPacketNoEvent(new C03PacketPlayer.C04PacketPlayerPosition(mc.thePlayer.posX, -11, mc.thePlayer.posZ, true));
                    //mc.timer.timerSpeed = 1.0f;
                }
                if(timer.hasTimeElapsed(10000, true)) {
                    //mc.timer.timerSpeed = 0.1f;
                    DamageUtil.damageVerus();
                    //mc.timer.timerSpeed = 1.0f;
                }
            }

            if(mode.is("AntiAC")) {
                //mc.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer(true));
                if(timer.hasTimeElapsed(2500, true)) {
                    int rand = (int) MathUtils.randomNumber(15, 0);
                    mc.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer.C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY - rand, mc.thePlayer.posZ, false));
                    mc.thePlayer.setPosition(mc.thePlayer.posX, mc.thePlayer.posY - rand, mc.thePlayer.posZ);
                }
            }
        }
        if(e instanceof EventMove) {
            if(mode.is("Verus")) {
                if (timer.hasTimeElapsed(5000, false)) {
                    //((EventMove) e).setX((int) mc.thePlayer.posX + 1.0);
                    //((EventMove) e).setZ((int) mc.thePlayer.posZ + 1.0);
                }
            }
        }
        if(e instanceof EventMotion) {

            if(mode.is("Self lagback")) {
                double oldPosX =  mc.thePlayer.posX, oldPosY = mc.thePlayer.posY, oldPosZ = mc.thePlayer.posZ, oldYaw, oldPitch;

                if(timer.hasTimeElapsed(1000, true)) {
                    mc.thePlayer.posX = oldPosX;
                    mc.thePlayer.posY = oldPosY;
                    mc.thePlayer.posZ = oldPosZ;
                    mc.thePlayer.motionX *= 0.001F;
                    mc.thePlayer.motionY *= -0.5F;
                    mc.thePlayer.motionZ *= 0.001F;
                    oldPosX = mc.thePlayer.posX;
                    oldPosY = mc.thePlayer.posY;
                    oldPosZ = mc.thePlayer.posZ;
                }
            }
        }
    }
}
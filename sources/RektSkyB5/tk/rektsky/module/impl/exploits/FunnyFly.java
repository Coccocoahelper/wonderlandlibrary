/*
 * Decompiled with CFR 0.152.
 */
package tk.rektsky.module.impl.exploits;

import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C0BPacketEntityAction;
import net.minecraft.network.play.server.S12PacketEntityVelocity;
import org.greenrobot.eventbus.Subscribe;
import tk.rektsky.Client;
import tk.rektsky.event.impl.PacketReceiveEvent;
import tk.rektsky.event.impl.PacketSentEvent;
import tk.rektsky.event.impl.WorldTickEvent;
import tk.rektsky.module.Category;
import tk.rektsky.module.Module;
import tk.rektsky.module.ModulesManager;
import tk.rektsky.module.impl.exploits.ForceSprint;
import tk.rektsky.module.impl.exploits.PingSpoof;
import tk.rektsky.module.impl.render.Notification;
import tk.rektsky.module.settings.DoubleSetting;
import tk.rektsky.utils.MovementUtil;
import tk.rektsky.utils.display.ColorUtil;

public class FunnyFly
extends Module {
    int flyTicks = 0;
    public DoubleSetting speed = new DoubleSetting("Speed", 0.5, 8.0, 4.0);
    public DoubleSetting timer = new DoubleSetting("Timer", 0.1, 10.0, 1.0);

    public FunnyFly() {
        super("FunnyFly", "Funny Fly. Literally", Category.EXPLOIT);
    }

    @Override
    public void onEnable() {
        this.flyTicks = 0;
        if (this.mc.thePlayer != null) {
            PingSpoof pingSpoof;
            if (this.mc.thePlayer.hurtTime == 0) {
                Client.notify(new Notification.PopupMessage("FunnyFly", "Try get hit by other, shot yourself or use SelfDamage", ColorUtil.NotificationColors.GREEN, 20));
            }
            if (!(pingSpoof = ModulesManager.getModuleByClass(PingSpoof.class)).isToggled() || pingSpoof.delay.getValue() < 40 || !ModulesManager.getModuleByClass(ForceSprint.class).isToggled()) {
                Client.addClientChat("Warning: You need Ping Spoof and delay to 40 or more AND Forcesprint(And sprint once everytime you join a game) to do funnyfly bypass");
            }
        }
    }

    @Override
    public void onDisable() {
        this.mc.timer.timerSpeed = 1.0;
        this.mc.thePlayer.motionX = 0.0;
        this.mc.thePlayer.motionY = 0.0;
        this.mc.thePlayer.motionZ = 0.0;
    }

    @Subscribe
    public void onTick(WorldTickEvent event) {
        if (this.flyTicks > 0) {
            --this.flyTicks;
            if (this.flyTicks == 0) {
                this.setToggled(false);
                return;
            }
            this.mc.timer.timerSpeed = this.timer.getValue();
            this.mc.thePlayer.motionY = 0.0;
            if (!MovementUtil.isMoving()) {
                this.mc.thePlayer.motionX = 0.0;
                this.mc.thePlayer.motionZ = 0.0;
            }
            MovementUtil.strafe(this.speed.getValue());
            if (this.mc.gameSettings.keyBindJump.isKeyDown()) {
                this.mc.thePlayer.motionY = this.speed.getValue() / (double)1.4f;
                MovementUtil.strafe(this.speed.getValue() / (double)1.4f);
            } else if (this.mc.thePlayer.isSneaking()) {
                this.mc.thePlayer.motionY = -this.speed.getValue().doubleValue() / (double)1.4f;
                MovementUtil.strafe(this.speed.getValue() / (double)1.4f);
            }
        }
    }

    @Subscribe
    public void onPacket(PacketReceiveEvent event) {
        if (event.getPacket() instanceof S12PacketEntityVelocity && ((S12PacketEntityVelocity)event.getPacket()).getEntityID() == this.mc.thePlayer.getEntityId()) {
            PingSpoof pingSpoof = ModulesManager.getModuleByClass(PingSpoof.class);
            this.flyTicks = pingSpoof.isToggled() ? 60 : 10;
            Client.notify(new Notification.PopupMessage("FunnyFly", "You can fly for " + (double)Math.round((double)this.flyTicks / (20.0 * this.timer.getValue()) * 10.0) / 10.0 + " seconds now", ColorUtil.NotificationColors.GREEN, 40));
        }
    }

    @Subscribe
    public void groundSpoof(PacketSentEvent event) {
        if (event.getPacket() instanceof C03PacketPlayer && this.flyTicks > 0) {
            if (this.mc.thePlayer.fallDistance > 3.0f) {
                ((C03PacketPlayer)event.getPacket()).onGround = true;
                this.mc.thePlayer.fallDistance = 0.0f;
            }
            if (((C0BPacketEntityAction)event.getPacket()).getAction() == C0BPacketEntityAction.Action.START_SPRINTING) {
                event.setCanceled(true);
            }
        }
    }
}


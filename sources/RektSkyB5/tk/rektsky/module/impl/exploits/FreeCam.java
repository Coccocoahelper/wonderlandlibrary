/*
 * Decompiled with CFR 0.152.
 */
package tk.rektsky.module.impl.exploits;

import net.minecraft.client.entity.EntityOtherPlayerMP;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C0BPacketEntityAction;
import net.minecraft.network.play.server.S07PacketRespawn;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;
import net.minecraft.network.play.server.S12PacketEntityVelocity;
import org.greenrobot.eventbus.Subscribe;
import tk.rektsky.event.impl.ClientTickEvent;
import tk.rektsky.event.impl.PacketReceiveEvent;
import tk.rektsky.event.impl.PacketSentEvent;
import tk.rektsky.event.impl.WorldTickPostEvent;
import tk.rektsky.module.Category;
import tk.rektsky.module.Module;
import tk.rektsky.module.settings.DoubleSetting;
import tk.rektsky.utils.MovementUtil;

public class FreeCam
extends Module {
    public DoubleSetting speedSetting = new DoubleSetting("Speed", 0.1, 10.0, 2.0);
    public double oldX = 0.0;
    public double oldY = 0.0;
    public double oldZ = 0.0;
    public float oldYaw = 0.0f;
    public float oldPitch = 0.0f;
    public EntityOtherPlayerMP player;

    public FreeCam() {
        super("FreeCam", "Allowed you fly around your body like a ghost", Category.EXPLOIT);
    }

    @Override
    public void onEnable() {
        this.oldX = this.mc.thePlayer.posX;
        this.oldY = this.mc.thePlayer.posY;
        this.oldZ = this.mc.thePlayer.posZ;
        this.oldYaw = this.mc.thePlayer.rotationYaw;
        this.oldPitch = this.mc.thePlayer.rotationPitch;
        this.player = new EntityOtherPlayerMP(this.mc.theWorld, this.mc.thePlayer.getGameProfile());
        this.player.copyLocationAndAnglesFrom(this.mc.thePlayer);
        this.player.rotationYawHead = this.mc.thePlayer.rotationYawHead;
        this.player.renderYawOffset = this.mc.thePlayer.renderYawOffset;
        this.mc.theWorld.addEntityToWorld(-6969, this.player);
        this.mc.thePlayer.noClip = true;
    }

    @Override
    public void onDisable() {
        this.mc.thePlayer.setPosition(this.oldX, this.oldY, this.oldZ);
        this.mc.thePlayer.rotationYaw = this.oldYaw;
        this.mc.thePlayer.rotationPitch = this.oldPitch;
        this.mc.thePlayer.motionX = 0.0;
        this.mc.thePlayer.motionY = 0.0;
        this.mc.thePlayer.motionZ = 0.0;
        this.mc.theWorld.removeEntity(this.player);
        this.player = null;
    }

    @Subscribe
    public void onPacketRecive(PacketReceiveEvent event) {
        if (event instanceof PacketReceiveEvent) {
            if (event.getPacket() instanceof S08PacketPlayerPosLook) {
                this.oldX = ((S08PacketPlayerPosLook)event.getPacket()).getX();
                this.oldY = ((S08PacketPlayerPosLook)event.getPacket()).getY();
                this.oldZ = ((S08PacketPlayerPosLook)event.getPacket()).getZ();
                this.oldYaw = ((S08PacketPlayerPosLook)event.getPacket()).yaw;
                this.oldPitch = ((S08PacketPlayerPosLook)event.getPacket()).pitch;
                this.player.posX = this.oldX;
                this.player.posY = this.oldY;
                this.player.posZ = this.oldZ;
                this.player.rotationYaw = this.oldYaw;
                this.player.rotationPitch = this.oldPitch;
                event.setCanceled(true);
                this.mc.getNetHandler().addToSendQueueSilent(new C03PacketPlayer.C06PacketPlayerPosLook(this.oldX, this.oldY, this.oldZ, this.oldYaw, this.oldPitch, false));
            }
            if (event.getPacket() instanceof S07PacketRespawn) {
                this.rawSetToggled(false);
            }
            if (event.getPacket() instanceof S12PacketEntityVelocity) {
                this.player.motionY += 4.0;
            }
        }
    }

    @Subscribe
    public void onClientTick(ClientTickEvent event) {
        if (event instanceof ClientTickEvent && (this.mc.theWorld == null || !this.mc.isInGame())) {
            this.rawSetToggled(false);
        }
    }

    @Subscribe
    public void onPostWorldTick(WorldTickPostEvent event) {
        this.mc.thePlayer.noClip = true;
        this.mc.thePlayer.fallDistance = 0.0f;
        this.mc.thePlayer.motionX = 0.0;
        this.mc.thePlayer.motionY = 0.0;
        this.mc.thePlayer.motionZ = 0.0;
        MovementUtil.strafe(1.0);
        if (this.mc.gameSettings.keyBindJump.isKeyDown()) {
            this.mc.thePlayer.motionY += 0.5;
        }
        if (this.mc.gameSettings.keyBindSneak.isKeyDown()) {
            this.mc.thePlayer.motionY -= 0.5;
        }
    }

    @Subscribe
    public void onPacketSend(PacketSentEvent event) {
        if (event instanceof PacketSentEvent && (event.getPacket() instanceof C03PacketPlayer || event.getPacket() instanceof C0BPacketEntityAction)) {
            event.setCanceled(true);
        }
    }
}

